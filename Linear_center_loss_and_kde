{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":9430984,"sourceType":"datasetVersion","datasetId":5729649}],"dockerImageVersionId":30761,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# Set directories\nimport os\nws_dir = '/kaggle/input'\ndataset_dir = os.path.join(ws_dir, 'dataset01')\nfaces_dir = os.path.join(dataset_dir, 'faces')","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-09-24T02:29:43.071494Z","iopub.execute_input":"2024-09-24T02:29:43.071810Z","iopub.status.idle":"2024-09-24T02:29:43.078031Z","shell.execute_reply.started":"2024-09-24T02:29:43.071764Z","shell.execute_reply":"2024-09-24T02:29:43.077264Z"},"trusted":true},"execution_count":22,"outputs":[]},{"cell_type":"code","source":"import cv2\nimport numpy as np\n\nimages = []\nlabels = []\n\n# Loop over each person directory in the faces directory\nfor person_name in os.listdir(faces_dir):\n    person_dir = os.path.join(faces_dir, person_name)\n\n    # Check if it is a directory (and not a file)\n    if os.path.isdir(person_dir):\n        # Loop over each image in the person's directory\n        for image_name in os.listdir(person_dir):\n            image_path = os.path.join(person_dir, image_name)\n\n            # Load image using OpenCV\n            image = cv2.imread(image_path)\n\n            # Optionally resize images to a standard size (e.g., 224x224)\n            image = cv2.resize(image, (224, 224))\n\n            # Convert the image to RGB (OpenCV loads images in BGR format by default)\n            image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n\n            # Append image and corresponding label to lists\n            images.append(image)\n            labels.append(person_name)  # The person's name is used as the label\n\n# Convert lists to NumPy arrays\nimages_np = np.array(images)\nlabels_np = np.array(labels)\n\n# Verify the shapes\nprint(f'Images shape: {images_np.shape}')  # (num_images, 224, 224, 3)\nprint(f'Labels shape: {labels_np.shape}')  # (num_images,)\n","metadata":{"execution":{"iopub.status.busy":"2024-09-24T02:29:46.165139Z","iopub.execute_input":"2024-09-24T02:29:46.165588Z","iopub.status.idle":"2024-09-24T02:29:55.729184Z","shell.execute_reply.started":"2024-09-24T02:29:46.165548Z","shell.execute_reply":"2024-09-24T02:29:55.728240Z"},"trusted":true},"execution_count":23,"outputs":[{"name":"stdout","text":"Images shape: (2562, 224, 224, 3)\nLabels shape: (2562,)\n","output_type":"stream"}]},{"cell_type":"code","source":"from tensorflow.keras.applications.vgg19 import preprocess_input\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import OneHotEncoder\nimport numpy as np\n\n# Assuming images_np and labels_np are provided\n# images_np.shape = (num_samples, height, width, channels)\n# labels_np.shape = (num_samples,)\n\n# Preprocess images for VGG19\nimages_np_preprocessed = preprocess_input(images_np)\n\n# One-hot encode labels\none_hot_encoder = OneHotEncoder(sparse=False)\nlabels_np_onehot = one_hot_encoder.fit_transform(labels_np.reshape(-1, 1))\n\n# Split into training, validation, and test sets\nX_train, X_temp, y_train, y_temp = train_test_split(images_np_preprocessed, labels_np_onehot, test_size=0.3, random_state=42)\nX_val, X_test, y_val, y_test = train_test_split(X_temp, y_temp, test_size=0.5, random_state=42)\n\nprint(f\"Train set: {X_train.shape}, {y_train.shape}\")\nprint(f\"Validation set: {X_val.shape}, {y_val.shape}\")\nprint(f\"Test set: {X_test.shape}, {y_test.shape}\")\n","metadata":{"execution":{"iopub.status.busy":"2024-09-24T02:30:13.200926Z","iopub.execute_input":"2024-09-24T02:30:13.201743Z","iopub.status.idle":"2024-09-24T02:30:15.660323Z","shell.execute_reply.started":"2024-09-24T02:30:13.201703Z","shell.execute_reply":"2024-09-24T02:30:15.659280Z"},"trusted":true},"execution_count":24,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/preprocessing/_encoders.py:868: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"Train set: (1793, 224, 224, 3), (1793, 31)\nValidation set: (384, 224, 224, 3), (384, 31)\nTest set: (385, 224, 224, 3), (385, 31)\n","output_type":"stream"}]},{"cell_type":"code","source":"import tensorflow as tf\nfrom tensorflow.keras import layers, models, regularizers\nimport matplotlib.pyplot as plt\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\n\nclass CenterLossLayer(tf.keras.layers.Layer):\n    def __init__(self, num_classes, embedding_dim, margin=1.0, alpha=0.001, **kwargs):\n        super(CenterLossLayer, self).__init__(**kwargs)\n        self.num_classes = num_classes\n        self.embedding_dim = embedding_dim\n        self.margin = tf.cast(margin, tf.float32)\n        self.alpha = alpha  # EMA smoothing factor\n        self.distance = 0.1  # The length between P1 and P2\n\n        # Initialize center_p1 randomly using a normal distribution\n        self.centers_P1 = self.add_weight(name='centers_P1',\n                                          shape=(num_classes, embedding_dim),\n                                          initializer='random_normal',\n                                          trainable=False,\n                                          dtype=tf.float32)\n\n        # Create center_p2 without initialization\n        self.centers_P2 = self.add_weight(name='centers_P2',\n                                          shape=(num_classes, embedding_dim),\n                                          initializer='zeros',\n                                          trainable=False,\n                                          dtype=tf.float32)\n\n    def build(self, input_shape):\n        # Generate a random unit vector direction for center_p2\n        random_direction = tf.random.normal((self.num_classes, self.embedding_dim))\n        unit_vector = random_direction / tf.norm(random_direction, axis=1, keepdims=True)  # Normalize\n\n        # Assign center_p2 to be 'distance' units away from center_p1\n        center_p2_value = self.distance * unit_vector\n        self.centers_P2.assign(center_p2_value)\n\n        super(CenterLossLayer, self).build(input_shape)\n    \n    def call(self, inputs):\n        embeddings, labels = inputs\n\n        # Ensure embeddings and labels are float32\n        embeddings = tf.cast(embeddings, tf.float32)\n        labels = tf.argmax(labels, axis=-1, output_type=tf.int32)\n\n        # Step 1: Compute the midpoint for each class (mean of embeddings for each class)\n        batch_midpoint = tf.math.unsorted_segment_mean(embeddings, labels, num_segments=self.num_classes)\n\n        # Step 2: Calculate the variance for each class\n        squared_diff = tf.square(embeddings - tf.gather(batch_midpoint, labels))\n        batch_variance = tf.math.unsorted_segment_mean(squared_diff, labels, num_segments=self.num_classes)\n\n        # Step 3: Compute the standard deviation (sqrt of variance)\n        batch_stddev = tf.sqrt(batch_variance)\n\n        # Step 4: Position centers_P1 and centers_P2 around the midpoint\n        # Center_P1 closer to the midpoint, Center_P2 further from the midpoint\n        batch_centers_P1 = batch_midpoint - 0.5 * batch_stddev  # Center_P1 inside dense region\n        batch_centers_P2 = batch_midpoint + 0.5 * batch_stddev  # Center_P2 outside dense region\n\n        # Gather the centers corresponding to the labels\n        batch_centers_P1_gathered = tf.gather(batch_centers_P1, labels)\n        batch_centers_P2_gathered = tf.gather(batch_centers_P2, labels)\n\n        # Step 5: Update centers using EMA (Exponential Moving Average)\n        center_updates_P1 = tf.scatter_nd(tf.expand_dims(labels, 1),\n                                          batch_centers_P1_gathered,\n                                          shape=tf.shape(self.centers_P1))\n        center_updates_P2 = tf.scatter_nd(tf.expand_dims(labels, 1),\n                                          batch_centers_P2_gathered,\n                                          shape=tf.shape(self.centers_P2))\n\n        # EMA update for centers_P1 and centers_P2\n        new_centers_P1 = self.centers_P1 * (1 - self.alpha) + center_updates_P1 * self.alpha\n        new_centers_P2 = self.centers_P2 * (1 - self.alpha) + center_updates_P2 * self.alpha\n\n        # Assign updated centers\n        self.centers_P1.assign(new_centers_P1)\n        self.centers_P2.assign(new_centers_P2)\n\n        # Step 6: Compute distances to all class segments for each embedding\n        distances = self.compute_distance_to_segment_all_classes(embeddings)\n\n        # Step 7: Get the correct distances by indexing with labels\n        correct_distances = tf.gather_nd(distances, tf.expand_dims(labels, axis=-1), batch_dims=1)\n\n        # Step 8: Mask out correct class distances and find the minimum incorrect distance\n        mask = tf.one_hot(labels, depth=self.num_classes, on_value=False, off_value=True)\n        masked_distances = tf.where(mask, distances, tf.fill(tf.shape(distances), float('inf')))\n        min_incorrect_distances = tf.reduce_min(masked_distances, axis=1)\n\n        # Step 9: Compute the loss\n        incorrect_loss = tf.maximum(0.0, self.margin - min_incorrect_distances)\n        center_loss = tf.reduce_mean(tf.square(correct_distances))\n\n        return center_loss + tf.reduce_mean(incorrect_loss)\n\n\n    def compute_distance_to_segment_all_classes(self, embeddings):\n        \"\"\"\n        Compute the Euclidean distance from each embedding to the nearest point on the line segment\n        defined by P1 and P2 for each class.\n        \"\"\"\n        # Get P1 and P2 for all classes\n        P1 = self.centers_P1\n        P2 = self.centers_P2\n\n        # Vector from P1 to P2 for all classes\n        P1_P2 = P2 - P1\n\n        # Expand dims for broadcasting\n        P1 = tf.expand_dims(P1, axis=0)\n        P2 = tf.expand_dims(P2, axis=0)\n        P1_P2 = tf.expand_dims(P1_P2, axis=0)\n        embeddings = tf.expand_dims(embeddings, axis=1)\n\n        # Vector from P1 to the embeddings\n        P1_emb = embeddings - P1\n\n        # Project embeddings onto the line segment\n        proj = tf.reduce_sum(P1_emb * P1_P2, axis=2, keepdims=True) / tf.maximum(tf.reduce_sum(P1_P2 ** 2, axis=2, keepdims=True), 1e-8)\n\n        # Clamp projection to the range [0, 1] to restrict to the segment\n        proj_clamped = tf.clip_by_value(proj, 0.0, 1.0)\n\n        # Compute the nearest point on the line segment\n        nearest_point = P1 + proj_clamped * P1_P2\n\n        # Compute the Euclidean distance to the nearest point on the segment\n        distances = tf.norm(embeddings - nearest_point, axis=2)\n\n        return distances\n\ndef build_vgg19_center_loss(input_shape, num_classes, embedding_dim, dropout_rate, weight_decay):\n    # Define input layers\n    inputs = layers.Input(shape=input_shape, name='input')\n    labels_input = layers.Input(shape=(num_classes,), name='labels_input', dtype='float32')\n\n    # Define VGG19 backbone (without the top layers)\n    base_model = tf.keras.applications.VGG19(include_top=False, input_shape=input_shape, weights='imagenet')\n\n    for layer in base_model.layers[:15]:  # Freeze the first 15 layers (you can adjust this number)\n        layer.trainable = False\n    \n    # Flatten the output of the VGG19 backbone\n    x = base_model.output\n    x = layers.Flatten()(x)\n    \n    x = layers.Dense(1231, activation='swish', kernel_regularizer=regularizers.l2(weight_decay), bias_regularizer=regularizers.l2(0.01) )(x)\n    x = layers.Dropout(dropout_rate)(x)\n    x = layers.Dense(300, activation='swish', kernel_regularizer=regularizers.l2(weight_decay), bias_regularizer=regularizers.l2(0.01) )(x)\n    x = layers.Dropout(dropout_rate)(x)\n    x = layers.Dense(75, activation='swish', kernel_regularizer=regularizers.l2(weight_decay), bias_regularizer=regularizers.l2(0.01) )(x)\n    x = layers.Dropout(dropout_rate)(x)\n    x = layers.Dense(1003, activation='swish', kernel_regularizer=regularizers.l2(weight_decay), bias_regularizer=regularizers.l2(0.01) )(x)\n    x = layers.Dense(embedding_dim, activation='swish')(x)\n\n    # Define the embedding model\n    embedding_model = models.Model(inputs=base_model.input, outputs=x, name='embedding_model')\n\n    # Generate embeddings for the inputs\n    embedding = embedding_model(inputs)\n\n    # Define logits for classification using the embedding\n    logits = layers.Dense(num_classes, activation='softmax', name='classification_layer')(embedding)\n    # logits = tf.keras.layers.Lambda(lambda x: x / 10)(logits)  # Example scaling\n    # logits = tf.keras.layers.Activation('softmax')(logits)\n\n    # Define the custom center loss layer\n    center_loss_layer = CenterLossLayer(num_classes=num_classes, embedding_dim=embedding_dim)\n    center_loss_output = center_loss_layer([embedding, labels_input])\n\n    # Define the full model with classification and center loss\n    full_model = models.Model(\n        inputs=[inputs, labels_input],\n        outputs=[logits, center_loss_output],\n        name='full_model'\n    )\n\n    return embedding_model, full_model\n\ndef train_and_evaluate(model, train_generator, val_generator, steps_per_epoch, validation_steps, epochs, center_loss_weight, learning_rate):\n    optimizer = tf.keras.optimizers.RMSprop(learning_rate)\n\n    history = {\n        \"train_loss\": [],\n        \"train_class_loss\": [],\n        \"train_center_loss\": [],\n        \"train_acc\": [],\n        \"val_class_loss\": [],\n        \"val_center_loss\": [],\n        \"val_acc\": []\n    }\n\n    @tf.function\n    def train_step(inputs, labels):\n        with tf.GradientTape() as tape:\n            logits, center_loss = model([inputs, labels], training=True)\n            classification_loss = tf.keras.losses.CategoricalCrossentropy()(labels, logits)\n            total_loss = classification_loss + center_loss_weight * center_loss\n\n        gradients = tape.gradient(total_loss, model.trainable_variables)\n        optimizer.apply_gradients(zip(gradients, model.trainable_variables))\n\n        predictions = tf.argmax(logits, axis=-1)\n        labels_true = tf.argmax(labels, axis=-1)\n        train_acc = tf.reduce_mean(tf.cast(tf.equal(predictions, labels_true), tf.float32))\n\n        return total_loss, classification_loss, center_loss, train_acc\n\n    @tf.function\n    def eval_step(inputs, labels):\n        logits, center_loss = model([inputs, labels], training=False)\n        classification_loss = tf.keras.losses.CategoricalCrossentropy()(labels, logits)\n\n        predictions = tf.argmax(logits, axis=-1)\n        labels_true = tf.argmax(labels, axis=-1)\n        accuracy = tf.reduce_mean(tf.cast(tf.equal(predictions, labels_true), tf.float32))\n\n        return classification_loss, center_loss, accuracy\n\n    for epoch in range(epochs):\n        print(f\"Epoch {epoch+1}/{epochs}\")\n\n        # Training loop\n        epoch_loss, epoch_class_loss, epoch_center_loss, epoch_acc = 0, 0, 0, 0\n        for step in range(steps_per_epoch):\n            inputs_batch, labels_batch = next(train_generator)\n            loss, class_loss, center_loss, acc = train_step(inputs_batch, labels_batch)\n            epoch_loss += loss\n            epoch_class_loss += class_loss\n            epoch_center_loss += center_loss\n            epoch_acc += acc\n\n        epoch_loss /= steps_per_epoch\n        epoch_class_loss /= steps_per_epoch\n        epoch_center_loss /= steps_per_epoch\n        epoch_acc /= steps_per_epoch\n\n        print(f\"Train Loss: {epoch_loss:.4f}, Class Loss: {epoch_class_loss:.4f}, Center Loss: {epoch_center_loss:.4f}, Acc: {epoch_acc:.4f}\")\n\n        history[\"train_loss\"].append(epoch_loss)\n        history[\"train_class_loss\"].append(epoch_class_loss)\n        history[\"train_center_loss\"].append(epoch_center_loss)\n        history[\"train_acc\"].append(epoch_acc)\n\n        # Validation loop\n        val_class_loss, val_center_loss, val_acc = 0, 0, 0\n        for step in range(validation_steps):\n            inputs_batch, labels_batch = next(val_generator)\n            class_loss, center_loss, acc = eval_step(inputs_batch, labels_batch)\n            val_class_loss += class_loss\n            val_center_loss += center_loss\n            val_acc += acc\n\n        val_class_loss /= validation_steps\n        val_center_loss /= validation_steps\n        val_acc /= validation_steps\n\n        print(f\"Val Class Loss: {val_class_loss:.4f}, Val Center Loss: {val_center_loss:.4f}, Val Acc: {val_acc:.4f}\")\n\n        history[\"val_class_loss\"].append(val_class_loss)\n        history[\"val_center_loss\"].append(val_center_loss)\n        history[\"val_acc\"].append(val_acc)\n\n    return history\n\n# Initialize ImageDataGenerator with augmentation options (without rescaling)\ntrain_datagen = ImageDataGenerator(\n    rotation_range=20,           # Randomly rotate images by 20 degrees\n    width_shift_range=0.2,       # Randomly shift images horizontally\n    height_shift_range=0.2,      # Randomly shift images vertically\n    shear_range=0.2,             # Shear transformation\n    zoom_range=0.2,              # Zoom in/out\n    horizontal_flip=True,        # Random horizontal flipping\n    fill_mode='nearest'          # Filling pixels after transformations\n)\n\n# Example usage with specified values\ninput_shape = (224, 224, 3)        # Input shape for images (224x224 RGB)\nnum_classes = 31                   # Number of classes in the dataset\nembedding_dim = 768              # Dimensionality of the embedding space\ndropout_rate = 0.1               # Dropout rate for regularization\nweight_decay = 0.05 #0.005            # L2 regularization weight\ncenter_loss_weight = 0.01 #0.0001          # Weight for center loss\nlearning_rate = 1e-4               # Learning rate for the optimizer\nbatch_size = 32                    # Batch size for training\nepochs = 30                      # Number of epochs to train\n\nval_datagen = ImageDataGenerator()  # No additional augmentations for validation\n\n# Load and augment training data\ntrain_generator = train_datagen.flow(X_train, y_train, batch_size=batch_size)\n\n# Load validation data\nval_generator = val_datagen.flow(X_val, y_val, batch_size=batch_size)\n\nsteps_per_epoch = len(X_train) // batch_size\nvalidation_steps = len(X_val)  // batch_size\n\n# Build the model using VGG19 and center loss\nembedding_model, full_model = build_vgg19_center_loss(input_shape, num_classes, embedding_dim, dropout_rate, weight_decay)\n# Train the model using data generators\nhistory = train_and_evaluate(full_model, train_generator, val_generator, steps_per_epoch, validation_steps, epochs, center_loss_weight, learning_rate)\n","metadata":{"execution":{"iopub.status.busy":"2024-09-23T22:43:30.543217Z","iopub.execute_input":"2024-09-23T22:43:30.543779Z"},"trusted":true},"execution_count":null,"outputs":[{"name":"stdout","text":"Epoch 1/30\nTrain Loss: 3.4977, Class Loss: 3.4088, Center Loss: 8.8826, Acc: 0.0586\nVal Class Loss: 3.3278, Val Center Loss: 2.0017, Val Acc: 0.0625\nEpoch 2/30\nTrain Loss: 3.2429, Class Loss: 3.1428, Center Loss: 10.0119, Acc: 0.1127\nVal Class Loss: 2.7756, Val Center Loss: 12.2634, Val Acc: 0.2031\nEpoch 3/30\nTrain Loss: 2.8436, Class Loss: 2.6730, Center Loss: 17.0590, Acc: 0.2042\nVal Class Loss: 2.3634, Val Center Loss: 19.9463, Val Acc: 0.3177\nEpoch 4/30\nTrain Loss: 2.5672, Class Loss: 2.3630, Center Loss: 20.4151, Acc: 0.2807\nVal Class Loss: 2.3129, Val Center Loss: 29.1523, Val Acc: 0.2839\nEpoch 5/30\nTrain Loss: 2.3461, Class Loss: 2.1360, Center Loss: 21.0061, Acc: 0.3449\nVal Class Loss: 1.7950, Val Center Loss: 19.9964, Val Acc: 0.4401\nEpoch 6/30\nTrain Loss: 2.1737, Class Loss: 1.9621, Center Loss: 21.1593, Acc: 0.3806\nVal Class Loss: 1.7653, Val Center Loss: 24.9800, Val Acc: 0.4609\nEpoch 7/30\nTrain Loss: 1.9695, Class Loss: 1.7500, Center Loss: 21.9429, Acc: 0.4621\nVal Class Loss: 1.5832, Val Center Loss: 24.4102, Val Acc: 0.4740\nEpoch 8/30\nTrain Loss: 1.7644, Class Loss: 1.5513, Center Loss: 21.3135, Acc: 0.5229\nVal Class Loss: 1.2781, Val Center Loss: 29.6072, Val Acc: 0.6068\nEpoch 9/30\nTrain Loss: 1.6131, Class Loss: 1.3857, Center Loss: 22.7411, Acc: 0.6016\nVal Class Loss: 1.0852, Val Center Loss: 19.9756, Val Acc: 0.6641\nEpoch 10/30\nTrain Loss: 1.4960, Class Loss: 1.2831, Center Loss: 21.2911, Acc: 0.5932\nVal Class Loss: 0.9758, Val Center Loss: 18.9435, Val Acc: 0.7057\nEpoch 11/30\nTrain Loss: 1.3066, Class Loss: 1.0900, Center Loss: 21.6612, Acc: 0.6836\nVal Class Loss: 0.8642, Val Center Loss: 21.0744, Val Acc: 0.7318\nEpoch 12/30\nTrain Loss: 1.1519, Class Loss: 0.9468, Center Loss: 20.5146, Acc: 0.7277\nVal Class Loss: 0.7950, Val Center Loss: 22.0125, Val Acc: 0.7448\nEpoch 13/30\nTrain Loss: 1.0979, Class Loss: 0.9092, Center Loss: 18.8691, Acc: 0.7427\nVal Class Loss: 0.7107, Val Center Loss: 22.1864, Val Acc: 0.7786\nEpoch 14/30\nTrain Loss: 0.9735, Class Loss: 0.7796, Center Loss: 19.3970, Acc: 0.7846\nVal Class Loss: 0.7944, Val Center Loss: 17.7650, Val Acc: 0.7760\nEpoch 15/30\nTrain Loss: 0.8388, Class Loss: 0.6604, Center Loss: 17.8430, Acc: 0.8069\nVal Class Loss: 0.6452, Val Center Loss: 15.4179, Val Acc: 0.8073\nEpoch 16/30\nTrain Loss: 0.7968, Class Loss: 0.6277, Center Loss: 16.9103, Acc: 0.8343\nVal Class Loss: 0.5588, Val Center Loss: 16.7644, Val Acc: 0.8203\nEpoch 17/30\nTrain Loss: 0.7200, Class Loss: 0.5617, Center Loss: 15.8302, Acc: 0.8315\nVal Class Loss: 0.7553, Val Center Loss: 15.5673, Val Acc: 0.7708\nEpoch 18/30\nTrain Loss: 0.6752, Class Loss: 0.5237, Center Loss: 15.1495, Acc: 0.8421\nVal Class Loss: 0.4549, Val Center Loss: 12.7583, Val Acc: 0.8698\nEpoch 19/30\nTrain Loss: 0.5557, Class Loss: 0.4102, Center Loss: 14.5537, Acc: 0.8951\nVal Class Loss: 0.4449, Val Center Loss: 12.4302, Val Acc: 0.8646\nEpoch 20/30\nTrain Loss: 0.4813, Class Loss: 0.3438, Center Loss: 13.7454, Acc: 0.9040\nVal Class Loss: 0.3816, Val Center Loss: 10.8925, Val Acc: 0.8958\nEpoch 21/30\nTrain Loss: 0.5057, Class Loss: 0.3777, Center Loss: 12.8042, Acc: 0.8956\nVal Class Loss: 0.6038, Val Center Loss: 11.4272, Val Acc: 0.8255\nEpoch 22/30\nTrain Loss: 0.5494, Class Loss: 0.4232, Center Loss: 12.6112, Acc: 0.8828\nVal Class Loss: 0.3592, Val Center Loss: 9.6024, Val Acc: 0.8880\nEpoch 23/30\nTrain Loss: 0.3966, Class Loss: 0.2821, Center Loss: 11.4538, Acc: 0.9325\nVal Class Loss: 0.4258, Val Center Loss: 10.7646, Val Acc: 0.8646\nEpoch 24/30\nTrain Loss: 0.4170, Class Loss: 0.3019, Center Loss: 11.5071, Acc: 0.9302\nVal Class Loss: 0.2933, Val Center Loss: 8.1823, Val Acc: 0.9115\nEpoch 25/30\nTrain Loss: 0.3648, Class Loss: 0.2577, Center Loss: 10.7163, Acc: 0.9302\nVal Class Loss: 0.3224, Val Center Loss: 7.8369, Val Acc: 0.8984\nEpoch 26/30\nTrain Loss: 0.3266, Class Loss: 0.2300, Center Loss: 9.6575, Acc: 0.9425\nVal Class Loss: 0.4910, Val Center Loss: 8.9601, Val Acc: 0.8672\nEpoch 27/30\nTrain Loss: 0.3034, Class Loss: 0.2091, Center Loss: 9.4317, Acc: 0.9509\nVal Class Loss: 0.2777, Val Center Loss: 7.2029, Val Acc: 0.9193\nEpoch 28/30\n","output_type":"stream"}]},{"cell_type":"code","source":"history = train_and_evaluate(full_model, train_generator, val_generator, steps_per_epoch, validation_steps, epochs, center_loss_weight, learning_rate)","metadata":{"execution":{"iopub.status.busy":"2024-09-23T22:59:04.831657Z","iopub.execute_input":"2024-09-23T22:59:04.832642Z","iopub.status.idle":"2024-09-23T23:14:18.632775Z","shell.execute_reply.started":"2024-09-23T22:59:04.832596Z","shell.execute_reply":"2024-09-23T23:14:18.631778Z"},"trusted":true},"execution_count":11,"outputs":[{"name":"stdout","text":"Epoch 1/30\nTrain Loss: 0.3116, Class Loss: 0.2180, Center Loss: 9.3598, Acc: 0.9431\nVal Class Loss: 0.2381, Val Center Loss: 6.6455, Val Acc: 0.9271\nEpoch 2/30\nTrain Loss: 0.2343, Class Loss: 0.1520, Center Loss: 8.2310, Acc: 0.9654\nVal Class Loss: 0.4118, Val Center Loss: 7.4256, Val Acc: 0.8932\nEpoch 3/30\nTrain Loss: 0.2232, Class Loss: 0.1414, Center Loss: 8.1796, Acc: 0.9665\nVal Class Loss: 0.3374, Val Center Loss: 6.0421, Val Acc: 0.9219\nEpoch 4/30\nTrain Loss: 0.2108, Class Loss: 0.1336, Center Loss: 7.7255, Acc: 0.9715\nVal Class Loss: 0.3122, Val Center Loss: 7.2569, Val Acc: 0.9349\nEpoch 5/30\nTrain Loss: 0.2419, Class Loss: 0.1637, Center Loss: 7.8175, Acc: 0.9598\nVal Class Loss: 0.3136, Val Center Loss: 6.5963, Val Acc: 0.9141\nEpoch 6/30\nTrain Loss: 0.2033, Class Loss: 0.1299, Center Loss: 7.3345, Acc: 0.9671\nVal Class Loss: 0.3893, Val Center Loss: 6.0030, Val Acc: 0.9089\nEpoch 7/30\nTrain Loss: 0.1925, Class Loss: 0.1230, Center Loss: 6.9517, Acc: 0.9693\nVal Class Loss: 0.3681, Val Center Loss: 6.4530, Val Acc: 0.9141\nEpoch 8/30\nTrain Loss: 0.1812, Class Loss: 0.1120, Center Loss: 6.9192, Acc: 0.9738\nVal Class Loss: 0.3791, Val Center Loss: 5.7006, Val Acc: 0.8932\nEpoch 9/30\nTrain Loss: 0.1842, Class Loss: 0.1137, Center Loss: 7.0515, Acc: 0.9704\nVal Class Loss: 0.2170, Val Center Loss: 5.4790, Val Acc: 0.9453\nEpoch 10/30\nTrain Loss: 0.1731, Class Loss: 0.1076, Center Loss: 6.5489, Acc: 0.9760\nVal Class Loss: 0.2369, Val Center Loss: 4.5934, Val Acc: 0.9401\nEpoch 11/30\nTrain Loss: 0.1696, Class Loss: 0.1053, Center Loss: 6.4255, Acc: 0.9754\nVal Class Loss: 0.2859, Val Center Loss: 5.0491, Val Acc: 0.9323\nEpoch 12/30\nTrain Loss: 0.1606, Class Loss: 0.0978, Center Loss: 6.2778, Acc: 0.9727\nVal Class Loss: 0.2726, Val Center Loss: 5.5035, Val Acc: 0.9401\nEpoch 13/30\nTrain Loss: 0.1565, Class Loss: 0.0946, Center Loss: 6.1840, Acc: 0.9777\nVal Class Loss: 0.1980, Val Center Loss: 4.1271, Val Acc: 0.9401\nEpoch 14/30\nTrain Loss: 0.1316, Class Loss: 0.0744, Center Loss: 5.7172, Acc: 0.9866\nVal Class Loss: 0.2325, Val Center Loss: 4.3612, Val Acc: 0.9375\nEpoch 15/30\nTrain Loss: 0.2075, Class Loss: 0.1468, Center Loss: 6.0706, Acc: 0.9643\nVal Class Loss: 0.3864, Val Center Loss: 6.1845, Val Acc: 0.8958\nEpoch 16/30\nTrain Loss: 0.1560, Class Loss: 0.0965, Center Loss: 5.9462, Acc: 0.9777\nVal Class Loss: 0.3452, Val Center Loss: 5.4101, Val Acc: 0.9245\nEpoch 17/30\nTrain Loss: 0.1614, Class Loss: 0.0989, Center Loss: 6.2462, Acc: 0.9754\nVal Class Loss: 0.2578, Val Center Loss: 4.6805, Val Acc: 0.9427\nEpoch 18/30\nTrain Loss: 0.1230, Class Loss: 0.0684, Center Loss: 5.4670, Acc: 0.9816\nVal Class Loss: 0.4439, Val Center Loss: 6.1046, Val Acc: 0.9036\nEpoch 19/30\nTrain Loss: 0.1574, Class Loss: 0.1001, Center Loss: 5.7243, Acc: 0.9777\nVal Class Loss: 0.3115, Val Center Loss: 4.5724, Val Acc: 0.9271\nEpoch 20/30\nTrain Loss: 0.1458, Class Loss: 0.0865, Center Loss: 5.9340, Acc: 0.9805\nVal Class Loss: 0.3193, Val Center Loss: 4.8761, Val Acc: 0.9323\nEpoch 21/30\nTrain Loss: 0.1218, Class Loss: 0.0690, Center Loss: 5.2749, Acc: 0.9838\nVal Class Loss: 0.3288, Val Center Loss: 5.4919, Val Acc: 0.9271\nEpoch 22/30\nTrain Loss: 0.1457, Class Loss: 0.0888, Center Loss: 5.6869, Acc: 0.9794\nVal Class Loss: 0.3002, Val Center Loss: 4.9878, Val Acc: 0.9297\nEpoch 23/30\nTrain Loss: 0.1264, Class Loss: 0.0753, Center Loss: 5.1057, Acc: 0.9805\nVal Class Loss: 0.2246, Val Center Loss: 3.7880, Val Acc: 0.9557\nEpoch 24/30\nTrain Loss: 0.1361, Class Loss: 0.0795, Center Loss: 5.6555, Acc: 0.9805\nVal Class Loss: 0.2252, Val Center Loss: 4.9443, Val Acc: 0.9427\nEpoch 25/30\nTrain Loss: 0.1143, Class Loss: 0.0611, Center Loss: 5.3164, Acc: 0.9844\nVal Class Loss: 0.2502, Val Center Loss: 4.7728, Val Acc: 0.9297\nEpoch 26/30\nTrain Loss: 0.1168, Class Loss: 0.0660, Center Loss: 5.0797, Acc: 0.9872\nVal Class Loss: 0.2836, Val Center Loss: 4.5685, Val Acc: 0.9245\nEpoch 27/30\nTrain Loss: 0.1438, Class Loss: 0.0883, Center Loss: 5.5489, Acc: 0.9805\nVal Class Loss: 0.4149, Val Center Loss: 5.2350, Val Acc: 0.9141\nEpoch 28/30\nTrain Loss: 0.0946, Class Loss: 0.0440, Center Loss: 5.0581, Acc: 0.9911\nVal Class Loss: 0.8222, Val Center Loss: 8.9647, Val Acc: 0.8385\nEpoch 29/30\nTrain Loss: 0.1129, Class Loss: 0.0620, Center Loss: 5.0907, Acc: 0.9844\nVal Class Loss: 0.3298, Val Center Loss: 5.1718, Val Acc: 0.9297\nEpoch 30/30\nTrain Loss: 0.1248, Class Loss: 0.0716, Center Loss: 5.3130, Acc: 0.9827\nVal Class Loss: 0.1681, Val Center Loss: 3.8583, Val Acc: 0.9479\n","output_type":"stream"}]},{"cell_type":"code","source":"import numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.manifold import TSNE\nfrom sklearn.preprocessing import LabelEncoder\nfrom matplotlib import cm\nfrom matplotlib.colors import ListedColormap\n\n\n#embedding_model = models.Model(inputs=model.inputs[0], outputs=model.get_layer('embeddings').output)\n\n# Generate embeddings with 'training=False'\nembeddings = embedding_model.predict(images_np_preprocessed)\n\n# Sample image embeddings and labels\n# image_embeddings = ... (your embeddings)\n# labels_np = ... (your string labels)\n\n# Convert string labels to numeric labels\nlabel_encoder = LabelEncoder()\nnumeric_labels = label_encoder.fit_transform(labels_np)\n\n# Use t-SNE to reduce the embedding space to 2D for visualization\ntsne = TSNE(n_components=2, random_state=42)\nembeddings_2d = tsne.fit_transform(embeddings)  # Use your actual embeddings here\n\n# Create a custom color map to support 31 classes\ncolors = cm.get_cmap('tab20b', 31)  # 'tab20b' offers a distinct palette; we can define 31 colors explicitly\n\n# Plot the 2D embeddings with color based on numeric labels\nplt.figure(figsize=(10, 10))\nscatter = plt.scatter(embeddings_2d[:, 0], embeddings_2d[:, 1], \n                      c=numeric_labels, cmap=colors, s=20)  # Decreased marker size (s=20)\n\n# Add a color legend\nlegend1 = plt.legend(*scatter.legend_elements(), title=\"Person\")\nplt.gca().add_artist(legend1)\n\n# Set plot details\nplt.title('t-SNE of Image Embeddings (Color-coded)')\nplt.xlabel('Component 1')\nplt.ylabel('Component 2')\n\n# Show the plot\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-09-23T23:14:54.749341Z","iopub.execute_input":"2024-09-23T23:14:54.749766Z","iopub.status.idle":"2024-09-23T23:15:22.690844Z","shell.execute_reply.started":"2024-09-23T23:14:54.749726Z","shell.execute_reply":"2024-09-23T23:15:22.689899Z"},"trusted":true},"execution_count":12,"outputs":[{"name":"stdout","text":"\u001b[1m81/81\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 172ms/step\n","output_type":"stream"},{"name":"stderr","text":"/tmp/ipykernel_36/128802008.py:27: MatplotlibDeprecationWarning: The get_cmap function was deprecated in Matplotlib 3.7 and will be removed two minor releases later. Use ``matplotlib.colormaps[name]`` or ``matplotlib.colormaps.get_cmap(obj)`` instead.\n  colors = cm.get_cmap('tab20b', 31)  # 'tab20b' offers a distinct palette; we can define 31 colors explicitly\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x1000 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"from collections import defaultdict\n\n# Convert string labels to numeric labels\nlabel_encoder = LabelEncoder()\nnumeric_labels = label_encoder.fit_transform(labels_np)\n\n# Use t-SNE to reduce the embedding space to 2D for visualization\ntsne = TSNE(n_components=2, random_state=42)\nembeddings_2d = tsne.fit_transform(embeddings)  # Use your actual embeddings here\n\n# Create a custom color map to support 31 classes\ncolors = cm.get_cmap('tab20b', 31)  # 'tab20b' offers a distinct palette; we can define 31 colors explicitly\n\n# Plot the 2D embeddings with color based on numeric labels\nplt.figure(figsize=(12, 12))\nscatter = plt.scatter(embeddings_2d[:, 0], embeddings_2d[:, 1], \n                      c=numeric_labels, cmap=colors, s=50)  # Adjust marker size (s=50)\n\n# To store average position of each cluster\ncluster_centers = defaultdict(list)\n\n# Gather all points belonging to the same class\nfor i, label in enumerate(numeric_labels):\n    cluster_centers[label].append(embeddings_2d[i])\n\n# Annotate each cluster with one label\nfor label, points in cluster_centers.items():\n    cluster_points = np.array(points)\n    # Find the centroid of the cluster\n    centroid = np.mean(cluster_points, axis=0)\n    # Get the original string label for the cluster\n    label_name = label_encoder.inverse_transform([label])[0]\n    # Annotate at the centroid\n    plt.text(centroid[0], centroid[1], label_name, fontsize=12, ha='center', va='center', \n             bbox=dict(facecolor='white', alpha=0.6, edgecolor='none'))\n\n# Add a color legend\nlegend1 = plt.legend(*scatter.legend_elements(), title=\"Person\")\nplt.gca().add_artist(legend1)\n\n# Set plot details\nplt.title('t-SNE of Image Embeddings with One Label per Cluster')\nplt.xlabel('Component 1')\nplt.ylabel('Component 2')\n\n# Show the plot\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-09-23T23:23:28.316078Z","iopub.execute_input":"2024-09-23T23:23:28.316480Z","iopub.status.idle":"2024-09-23T23:23:37.763051Z","shell.execute_reply.started":"2024-09-23T23:23:28.316439Z","shell.execute_reply":"2024-09-23T23:23:37.762131Z"},"trusted":true},"execution_count":13,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_36/3858921856.py:12: MatplotlibDeprecationWarning: The get_cmap function was deprecated in Matplotlib 3.7 and will be removed two minor releases later. Use ``matplotlib.colormaps[name]`` or ``matplotlib.colormaps.get_cmap(obj)`` instead.\n  colors = cm.get_cmap('tab20b', 31)  # 'tab20b' offers a distinct palette; we can define 31 colors explicitly\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x1200 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"## KDE","metadata":{}},{"cell_type":"code","source":"import tensorflow as tf\nfrom tensorflow.keras import layers, models, regularizers\nimport matplotlib.pyplot as plt\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\n\nimport tensorflow as tf\nfrom tensorflow.keras import layers, models, regularizers\nimport numpy as np\n\nclass KDELossLayer(tf.keras.layers.Layer):\n    def __init__(self, bandwidth=1.0, **kwargs):\n        super(KDELossLayer, self).__init__(**kwargs)\n        self.bandwidth = tf.cast(bandwidth, tf.float32)\n\n    def call(self, inputs):\n        embeddings, labels = inputs\n\n        # Ensure embeddings are float32\n        embeddings = tf.cast(embeddings, tf.float32)\n\n        # Convert labels to one-hot encoding\n        labels = tf.argmax(labels, axis=-1, output_type=tf.int32)\n        one_hot_labels = tf.one_hot(labels, depth=tf.reduce_max(labels) + 1)\n\n        # Compute pairwise distances for all embeddings\n        pairwise_dists = tf.norm(\n            tf.expand_dims(embeddings, 1) - tf.expand_dims(embeddings, 0), axis=-1\n        )\n\n        # Gaussian kernel for all distances\n        kde_density = tf.exp(-pairwise_dists**2 / (2 * self.bandwidth**2))\n\n        # For each class, apply the mask to isolate class members\n        mask = tf.matmul(one_hot_labels, tf.transpose(one_hot_labels))\n        \n        # Avoid self-contribution by masking out diagonal elements\n        mask_off_diagonal = tf.linalg.set_diag(mask, tf.zeros(tf.shape(mask)[0]))\n        \n        # Compute KDE loss for each class\n        kde_class_density = tf.reduce_sum(kde_density * mask_off_diagonal, axis=-1)\n\n        # Compute log of KDE density and avoid log(0)\n        kde_loss = -tf.reduce_mean(tf.math.log(kde_class_density + 1e-8))\n        \n        return kde_loss\n\n\n\ndef build_vgg19_kde_loss(input_shape, num_classes, embedding_dim, dropout_rate, weight_decay):\n    # Define input layers\n    inputs = layers.Input(shape=input_shape, name='input')\n    labels_input = layers.Input(shape=(num_classes,), name='labels_input', dtype='float32')\n\n    # Define VGG19 backbone (without the top layers)\n    base_model = tf.keras.applications.VGG19(include_top=False, input_shape=input_shape, weights='imagenet')\n\n    for layer in base_model.layers[:15]:  # Freeze the first 15 layers (you can adjust this number)\n        layer.trainable = False\n    \n    # Flatten the output of the VGG19 backbone\n    x = base_model.output\n    x = layers.Flatten()(x)\n    \n    x = layers.Dense(1231, activation='swish', kernel_regularizer=regularizers.l2(weight_decay), bias_regularizer=regularizers.l2(0.01))(x)\n    x = layers.Dropout(dropout_rate)(x)\n    x = layers.Dense(300, activation='swish', kernel_regularizer=regularizers.l2(weight_decay), bias_regularizer=regularizers.l2(0.01))(x)\n    x = layers.Dropout(dropout_rate)(x)\n    x = layers.Dense(75, activation='swish', kernel_regularizer=regularizers.l2(weight_decay), bias_regularizer=regularizers.l2(0.01))(x)\n    x = layers.Dropout(dropout_rate)(x)\n    x = layers.Dense(1003, activation='swish', kernel_regularizer=regularizers.l2(weight_decay), bias_regularizer=regularizers.l2(0.01))(x)\n    x = layers.Dense(embedding_dim, activation='swish')(x)\n\n    # Define the embedding model\n    embedding_model = models.Model(inputs=base_model.input, outputs=x, name='embedding_model')\n\n    # Generate embeddings for the inputs\n    embedding = embedding_model(inputs)\n\n    # Define logits for classification using the embedding\n    logits = layers.Dense(num_classes, activation='softmax', name='classification_layer')(embedding)\n\n    # Define the custom KDE loss layer\n    kde_loss_layer = KDELossLayer()\n    kde_loss_output = kde_loss_layer([embedding, labels_input])\n\n    # Define the full model with classification and KDE loss\n    full_model = models.Model(\n        inputs=[inputs, labels_input],\n        outputs=[logits, kde_loss_output],\n        name='full_model'\n    )\n\n    return embedding_model, full_model\n\ndef train_and_evaluate(model, train_generator, val_generator, steps_per_epoch, validation_steps, epochs, center_loss_weight, learning_rate):\n    optimizer = tf.keras.optimizers.RMSprop(learning_rate)\n\n    history = {\n        \"train_loss\": [],\n        \"train_class_loss\": [],\n        \"train_center_loss\": [],\n        \"train_acc\": [],\n        \"val_class_loss\": [],\n        \"val_center_loss\": [],\n        \"val_acc\": []\n    }\n\n    @tf.function\n    def train_step(inputs, labels):\n        with tf.GradientTape() as tape:\n            logits, center_loss = model([inputs, labels], training=True)\n            classification_loss = tf.keras.losses.CategoricalCrossentropy()(labels, logits)\n            total_loss = classification_loss + center_loss_weight * center_loss\n\n        gradients = tape.gradient(total_loss, model.trainable_variables)\n        optimizer.apply_gradients(zip(gradients, model.trainable_variables))\n\n        predictions = tf.argmax(logits, axis=-1)\n        labels_true = tf.argmax(labels, axis=-1)\n        train_acc = tf.reduce_mean(tf.cast(tf.equal(predictions, labels_true), tf.float32))\n\n        return total_loss, classification_loss, center_loss, train_acc\n\n    @tf.function\n    def eval_step(inputs, labels):\n        logits, center_loss = model([inputs, labels], training=False)\n        classification_loss = tf.keras.losses.CategoricalCrossentropy()(labels, logits)\n\n        predictions = tf.argmax(logits, axis=-1)\n        labels_true = tf.argmax(labels, axis=-1)\n        accuracy = tf.reduce_mean(tf.cast(tf.equal(predictions, labels_true), tf.float32))\n\n        return classification_loss, center_loss, accuracy\n\n    for epoch in range(epochs):\n        print(f\"Epoch {epoch+1}/{epochs}\")\n\n        # Training loop\n        epoch_loss, epoch_class_loss, epoch_center_loss, epoch_acc = 0, 0, 0, 0\n        for step in range(steps_per_epoch):\n            inputs_batch, labels_batch = next(train_generator)\n            loss, class_loss, center_loss, acc = train_step(inputs_batch, labels_batch)\n            epoch_loss += loss\n            epoch_class_loss += class_loss\n            epoch_center_loss += center_loss\n            epoch_acc += acc\n\n        epoch_loss /= steps_per_epoch\n        epoch_class_loss /= steps_per_epoch\n        epoch_center_loss /= steps_per_epoch\n        epoch_acc /= steps_per_epoch\n\n        print(f\"Train Loss: {epoch_loss:.4f}, Class Loss: {epoch_class_loss:.4f}, Center Loss: {epoch_center_loss:.4f}, Acc: {epoch_acc:.4f}\")\n\n        history[\"train_loss\"].append(epoch_loss)\n        history[\"train_class_loss\"].append(epoch_class_loss)\n        history[\"train_center_loss\"].append(epoch_center_loss)\n        history[\"train_acc\"].append(epoch_acc)\n\n        # Validation loop\n        val_class_loss, val_center_loss, val_acc = 0, 0, 0\n        for step in range(validation_steps):\n            inputs_batch, labels_batch = next(val_generator)\n            class_loss, center_loss, acc = eval_step(inputs_batch, labels_batch)\n            val_class_loss += class_loss\n            val_center_loss += center_loss\n            val_acc += acc\n\n        val_class_loss /= validation_steps\n        val_center_loss /= validation_steps\n        val_acc /= validation_steps\n\n        print(f\"Val Class Loss: {val_class_loss:.4f}, Val Center Loss: {val_center_loss:.4f}, Val Acc: {val_acc:.4f}\")\n\n        history[\"val_class_loss\"].append(val_class_loss)\n        history[\"val_center_loss\"].append(val_center_loss)\n        history[\"val_acc\"].append(val_acc)\n\n    return history\n\n# Initialize ImageDataGenerator with augmentation options (without rescaling)\ntrain_datagen = ImageDataGenerator(\n    rotation_range=20,           # Randomly rotate images by 20 degrees\n    width_shift_range=0.2,       # Randomly shift images horizontally\n    height_shift_range=0.2,      # Randomly shift images vertically\n    shear_range=0.2,             # Shear transformation\n    zoom_range=0.2,              # Zoom in/out\n    horizontal_flip=True,        # Random horizontal flipping\n    fill_mode='nearest'          # Filling pixels after transformations\n)\n\n# Example usage with specified values\ninput_shape = (224, 224, 3)        # Input shape for images (224x224 RGB)\nnum_classes = 31                   # Number of classes in the dataset\nembedding_dim = 768              # Dimensionality of the embedding space\ndropout_rate = 0.1               # Dropout rate for regularization\nweight_decay = 0.05 #0.005            # L2 regularization weight\ncenter_loss_weight = 0.01 #0.0001          # Weight for center loss\nlearning_rate = 1e-4               # Learning rate for the optimizer\nbatch_size = 32                    # Batch size for training\nepochs = 30                      # Number of epochs to train\n\nval_datagen = ImageDataGenerator()  # No additional augmentations for validation\n\n# Load and augment training data\ntrain_generator = train_datagen.flow(X_train, y_train, batch_size=batch_size)\n\n# Load validation data\nval_generator = val_datagen.flow(X_val, y_val, batch_size=batch_size)\n\nsteps_per_epoch = len(X_train) // batch_size\nvalidation_steps = len(X_val)  // batch_size\n\n# Build the model using VGG19 and center loss\nembedding_model, full_model = build_vgg19_kde_loss(input_shape, num_classes, embedding_dim, dropout_rate, weight_decay)\n# Train the model using data generators\nhistory = train_and_evaluate(full_model, train_generator, val_generator, steps_per_epoch, validation_steps, epochs, center_loss_weight, learning_rate)\n","metadata":{"execution":{"iopub.status.busy":"2024-09-24T00:57:27.264954Z","iopub.execute_input":"2024-09-24T00:57:27.265359Z","iopub.status.idle":"2024-09-24T01:14:25.394775Z","shell.execute_reply.started":"2024-09-24T00:57:27.265323Z","shell.execute_reply":"2024-09-24T01:14:25.393828Z"},"trusted":true},"execution_count":11,"outputs":[{"name":"stdout","text":"Epoch 1/30\nTrain Loss: 3.5031, Class Loss: 3.4192, Center Loss: 8.3824, Acc: 0.0530\nVal Class Loss: 3.2714, Val Center Loss: 8.1201, Val Acc: 0.0703\nEpoch 2/30\nTrain Loss: 3.3261, Class Loss: 3.2028, Center Loss: 12.3320, Acc: 0.1004\nVal Class Loss: 2.7991, Val Center Loss: 11.2320, Val Acc: 0.1250\nEpoch 3/30\nTrain Loss: 2.9044, Class Loss: 2.7394, Center Loss: 16.4996, Acc: 0.1713\nVal Class Loss: 2.4337, Val Center Loss: 15.6279, Val Acc: 0.2344\nEpoch 4/30\nTrain Loss: 2.5542, Class Loss: 2.3768, Center Loss: 17.7450, Acc: 0.2628\nVal Class Loss: 1.9267, Val Center Loss: 17.2824, Val Acc: 0.3438\nEpoch 5/30\nTrain Loss: 2.3433, Class Loss: 2.1607, Center Loss: 18.2591, Acc: 0.3170\nVal Class Loss: 1.6686, Val Center Loss: 18.3696, Val Acc: 0.4349\nEpoch 6/30\nTrain Loss: 2.1290, Class Loss: 1.9454, Center Loss: 18.3601, Acc: 0.3610\nVal Class Loss: 1.8002, Val Center Loss: 18.3607, Val Acc: 0.4323\nEpoch 7/30\nTrain Loss: 1.9943, Class Loss: 1.8108, Center Loss: 18.3431, Acc: 0.4113\nVal Class Loss: 1.5002, Val Center Loss: 18.2268, Val Acc: 0.4922\nEpoch 8/30\nTrain Loss: 1.7482, Class Loss: 1.5644, Center Loss: 18.3775, Acc: 0.4849\nVal Class Loss: 1.3815, Val Center Loss: 18.3927, Val Acc: 0.5859\nEpoch 9/30\nTrain Loss: 1.6141, Class Loss: 1.4300, Center Loss: 18.4100, Acc: 0.5424\nVal Class Loss: 1.3829, Val Center Loss: 18.3530, Val Acc: 0.5443\nEpoch 10/30\nTrain Loss: 1.5065, Class Loss: 1.3224, Center Loss: 18.4124, Acc: 0.5664\nVal Class Loss: 1.1349, Val Center Loss: 18.3636, Val Acc: 0.6615\nEpoch 11/30\nTrain Loss: 1.2590, Class Loss: 1.0748, Center Loss: 18.4207, Acc: 0.6473\nVal Class Loss: 0.8213, Val Center Loss: 18.4207, Val Acc: 0.7500\nEpoch 12/30\nTrain Loss: 1.2583, Class Loss: 1.0741, Center Loss: 18.4204, Acc: 0.6518\nVal Class Loss: 0.8292, Val Center Loss: 18.3900, Val Acc: 0.7552\nEpoch 13/30\nTrain Loss: 1.0805, Class Loss: 0.8963, Center Loss: 18.4207, Acc: 0.7299\nVal Class Loss: 1.0732, Val Center Loss: 18.4179, Val Acc: 0.7292\nEpoch 14/30\nTrain Loss: 1.0546, Class Loss: 0.8704, Center Loss: 18.4207, Acc: 0.7394\nVal Class Loss: 0.7198, Val Center Loss: 18.4207, Val Acc: 0.8307\nEpoch 15/30\nTrain Loss: 1.0837, Class Loss: 0.8996, Center Loss: 18.4169, Acc: 0.7282\nVal Class Loss: 0.8399, Val Center Loss: 18.4207, Val Acc: 0.7969\nEpoch 16/30\nTrain Loss: 0.9628, Class Loss: 0.7786, Center Loss: 18.4172, Acc: 0.7628\nVal Class Loss: 0.8059, Val Center Loss: 18.4207, Val Acc: 0.7578\nEpoch 17/30\nTrain Loss: 0.9041, Class Loss: 0.7199, Center Loss: 18.4195, Acc: 0.7768\nVal Class Loss: 0.7721, Val Center Loss: 18.4207, Val Acc: 0.8516\nEpoch 18/30\nTrain Loss: 0.8092, Class Loss: 0.6250, Center Loss: 18.4207, Acc: 0.8175\nVal Class Loss: 0.7321, Val Center Loss: 18.4207, Val Acc: 0.8385\nEpoch 19/30\nTrain Loss: 0.8262, Class Loss: 0.6420, Center Loss: 18.4207, Acc: 0.8175\nVal Class Loss: 0.7171, Val Center Loss: 18.4207, Val Acc: 0.8281\nEpoch 20/30\nTrain Loss: 0.7163, Class Loss: 0.5321, Center Loss: 18.4143, Acc: 0.8465\nVal Class Loss: 0.6971, Val Center Loss: 18.4207, Val Acc: 0.8438\nEpoch 21/30\nTrain Loss: 0.7312, Class Loss: 0.5470, Center Loss: 18.4194, Acc: 0.8432\nVal Class Loss: 0.7631, Val Center Loss: 18.4090, Val Acc: 0.8359\nEpoch 22/30\nTrain Loss: 0.6761, Class Loss: 0.4918, Center Loss: 18.4207, Acc: 0.8560\nVal Class Loss: 0.9005, Val Center Loss: 18.4207, Val Acc: 0.8385\nEpoch 23/30\nTrain Loss: 0.6896, Class Loss: 0.5054, Center Loss: 18.4207, Acc: 0.8644\nVal Class Loss: 1.2348, Val Center Loss: 18.4207, Val Acc: 0.7995\nEpoch 24/30\nTrain Loss: 0.6369, Class Loss: 0.4527, Center Loss: 18.4207, Acc: 0.8661\nVal Class Loss: 0.5658, Val Center Loss: 18.4207, Val Acc: 0.8672\nEpoch 25/30\nTrain Loss: 0.6134, Class Loss: 0.4292, Center Loss: 18.4207, Acc: 0.8783\nVal Class Loss: 0.6825, Val Center Loss: 18.4205, Val Acc: 0.8594\nEpoch 26/30\nTrain Loss: 0.6343, Class Loss: 0.4500, Center Loss: 18.4207, Acc: 0.8806\nVal Class Loss: 0.4766, Val Center Loss: 18.4207, Val Acc: 0.8984\nEpoch 27/30\nTrain Loss: 0.8342, Class Loss: 0.6500, Center Loss: 18.4206, Acc: 0.8772\nVal Class Loss: 0.3450, Val Center Loss: 18.4207, Val Acc: 0.8958\nEpoch 28/30\nTrain Loss: 0.5543, Class Loss: 0.3701, Center Loss: 18.4207, Acc: 0.8996\nVal Class Loss: 1.1211, Val Center Loss: 18.4207, Val Acc: 0.8307\nEpoch 29/30\nTrain Loss: 0.6025, Class Loss: 0.4183, Center Loss: 18.4207, Acc: 0.8979\nVal Class Loss: 0.9485, Val Center Loss: 18.4207, Val Acc: 0.8229\nEpoch 30/30\nTrain Loss: 0.4857, Class Loss: 0.3015, Center Loss: 18.4207, Acc: 0.9235\nVal Class Loss: 0.6329, Val Center Loss: 18.4207, Val Acc: 0.8802\n","output_type":"stream"}]},{"cell_type":"code","source":"history = train_and_evaluate(full_model, train_generator, val_generator, steps_per_epoch, validation_steps, epochs, center_loss_weight, learning_rate)","metadata":{"execution":{"iopub.status.busy":"2024-09-24T01:15:35.870930Z","iopub.execute_input":"2024-09-24T01:15:35.871941Z","iopub.status.idle":"2024-09-24T01:32:20.282237Z","shell.execute_reply.started":"2024-09-24T01:15:35.871897Z","shell.execute_reply":"2024-09-24T01:32:20.281267Z"},"trusted":true},"execution_count":13,"outputs":[{"name":"stdout","text":"Epoch 1/30\nTrain Loss: 0.8042, Class Loss: 0.6200, Center Loss: 18.4207, Acc: 0.8890\nVal Class Loss: 0.5035, Val Center Loss: 18.4207, Val Acc: 0.8802\nEpoch 2/30\nTrain Loss: 0.4737, Class Loss: 0.2895, Center Loss: 18.4207, Acc: 0.9258\nVal Class Loss: 1.1378, Val Center Loss: 18.4207, Val Acc: 0.8203\nEpoch 3/30\nTrain Loss: 0.5942, Class Loss: 0.4100, Center Loss: 18.4207, Acc: 0.8951\nVal Class Loss: 0.6983, Val Center Loss: 18.4207, Val Acc: 0.8906\nEpoch 4/30\nTrain Loss: 0.5293, Class Loss: 0.3451, Center Loss: 18.4207, Acc: 0.9163\nVal Class Loss: 0.6453, Val Center Loss: 18.4207, Val Acc: 0.9010\nEpoch 5/30\nTrain Loss: 0.5213, Class Loss: 0.3371, Center Loss: 18.4207, Acc: 0.9224\nVal Class Loss: 0.6569, Val Center Loss: 18.4207, Val Acc: 0.9036\nEpoch 6/30\nTrain Loss: 0.5428, Class Loss: 0.3586, Center Loss: 18.4207, Acc: 0.9107\nVal Class Loss: 0.5022, Val Center Loss: 18.4207, Val Acc: 0.9062\nEpoch 7/30\nTrain Loss: 0.6634, Class Loss: 0.4792, Center Loss: 18.4207, Acc: 0.9102\nVal Class Loss: 1.2612, Val Center Loss: 18.4207, Val Acc: 0.7917\nEpoch 8/30\nTrain Loss: 0.4890, Class Loss: 0.3048, Center Loss: 18.4207, Acc: 0.9230\nVal Class Loss: 0.8873, Val Center Loss: 18.4207, Val Acc: 0.8594\nEpoch 9/30\nTrain Loss: 0.4553, Class Loss: 0.2711, Center Loss: 18.4207, Acc: 0.9375\nVal Class Loss: 1.0017, Val Center Loss: 18.4207, Val Acc: 0.8672\nEpoch 10/30\nTrain Loss: 0.5893, Class Loss: 0.4051, Center Loss: 18.4207, Acc: 0.9191\nVal Class Loss: 1.3750, Val Center Loss: 18.4207, Val Acc: 0.7943\nEpoch 11/30\nTrain Loss: 0.4500, Class Loss: 0.2658, Center Loss: 18.4207, Acc: 0.9342\nVal Class Loss: 0.6375, Val Center Loss: 18.4207, Val Acc: 0.8880\nEpoch 12/30\nTrain Loss: 0.5713, Class Loss: 0.3871, Center Loss: 18.4207, Acc: 0.9386\nVal Class Loss: 0.8330, Val Center Loss: 18.4207, Val Acc: 0.8724\nEpoch 13/30\nTrain Loss: 0.5248, Class Loss: 0.3406, Center Loss: 18.4207, Acc: 0.9191\nVal Class Loss: 0.8087, Val Center Loss: 18.4207, Val Acc: 0.9010\nEpoch 14/30\nTrain Loss: 0.4992, Class Loss: 0.3149, Center Loss: 18.4207, Acc: 0.9308\nVal Class Loss: 0.7372, Val Center Loss: 18.4207, Val Acc: 0.8932\nEpoch 15/30\nTrain Loss: 0.5018, Class Loss: 0.3176, Center Loss: 18.4207, Acc: 0.9308\nVal Class Loss: 0.3601, Val Center Loss: 18.4207, Val Acc: 0.9167\nEpoch 16/30\nTrain Loss: 0.5006, Class Loss: 0.3164, Center Loss: 18.4207, Acc: 0.9308\nVal Class Loss: 0.8830, Val Center Loss: 18.4207, Val Acc: 0.8984\nEpoch 17/30\nTrain Loss: 0.4220, Class Loss: 0.2378, Center Loss: 18.4207, Acc: 0.9503\nVal Class Loss: 0.7670, Val Center Loss: 18.4207, Val Acc: 0.8984\nEpoch 18/30\nTrain Loss: 0.4787, Class Loss: 0.2944, Center Loss: 18.4207, Acc: 0.9408\nVal Class Loss: 0.5121, Val Center Loss: 18.4207, Val Acc: 0.9115\nEpoch 19/30\nTrain Loss: 0.4330, Class Loss: 0.2488, Center Loss: 18.4207, Acc: 0.9414\nVal Class Loss: 0.4922, Val Center Loss: 18.4207, Val Acc: 0.9036\nEpoch 20/30\nTrain Loss: 0.4072, Class Loss: 0.2230, Center Loss: 18.4207, Acc: 0.9414\nVal Class Loss: 0.7484, Val Center Loss: 18.4207, Val Acc: 0.9036\nEpoch 21/30\nTrain Loss: 0.4536, Class Loss: 0.2694, Center Loss: 18.4207, Acc: 0.9431\nVal Class Loss: 0.5858, Val Center Loss: 18.4066, Val Acc: 0.9219\nEpoch 22/30\nTrain Loss: 0.5109, Class Loss: 0.3267, Center Loss: 18.4207, Acc: 0.9386\nVal Class Loss: 3.7230, Val Center Loss: 18.4207, Val Acc: 0.7917\nEpoch 23/30\nTrain Loss: 0.5671, Class Loss: 0.3829, Center Loss: 18.4207, Acc: 0.9330\nVal Class Loss: 0.8706, Val Center Loss: 18.4207, Val Acc: 0.9089\nEpoch 24/30\nTrain Loss: 0.3876, Class Loss: 0.2033, Center Loss: 18.4207, Acc: 0.9526\nVal Class Loss: 0.8736, Val Center Loss: 18.4207, Val Acc: 0.9167\nEpoch 25/30\nTrain Loss: 0.4520, Class Loss: 0.2678, Center Loss: 18.4207, Acc: 0.9442\nVal Class Loss: 0.5366, Val Center Loss: 18.4207, Val Acc: 0.9089\nEpoch 26/30\nTrain Loss: 0.5859, Class Loss: 0.4017, Center Loss: 18.4207, Acc: 0.9442\nVal Class Loss: 0.6323, Val Center Loss: 18.4207, Val Acc: 0.9349\nEpoch 27/30\nTrain Loss: 0.4732, Class Loss: 0.2890, Center Loss: 18.4207, Acc: 0.9436\nVal Class Loss: 0.6032, Val Center Loss: 18.4207, Val Acc: 0.9219\nEpoch 28/30\nTrain Loss: 0.4312, Class Loss: 0.2470, Center Loss: 18.4207, Acc: 0.9492\nVal Class Loss: 1.0735, Val Center Loss: 18.4207, Val Acc: 0.8542\nEpoch 29/30\nTrain Loss: 0.5181, Class Loss: 0.3339, Center Loss: 18.4207, Acc: 0.9353\nVal Class Loss: 0.4028, Val Center Loss: 18.4207, Val Acc: 0.9219\nEpoch 30/30\nTrain Loss: 0.4156, Class Loss: 0.2314, Center Loss: 18.4207, Acc: 0.9509\nVal Class Loss: 0.5704, Val Center Loss: 18.4207, Val Acc: 0.9219\n","output_type":"stream"}]},{"cell_type":"code","source":"import numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.manifold import TSNE\nfrom sklearn.preprocessing import LabelEncoder\nfrom matplotlib import cm\nfrom matplotlib.colors import ListedColormap\n\n\n#embedding_model = models.Model(inputs=model.inputs[0], outputs=model.get_layer('embeddings').output)\n\n# Generate embeddings with 'training=False'\nembeddings = embedding_model.predict(images_np_preprocessed)\n\n# Sample image embeddings and labels\n# image_embeddings = ... (your embeddings)\n# labels_np = ... (your string labels)\n\n# Convert string labels to numeric labels\nlabel_encoder = LabelEncoder()\nnumeric_labels = label_encoder.fit_transform(labels_np)\n\n# Use t-SNE to reduce the embedding space to 2D for visualization\ntsne = TSNE(n_components=2, random_state=42)\nembeddings_2d = tsne.fit_transform(embeddings)  # Use your actual embeddings here\n\n# Create a custom color map to support 31 classes\ncolors = cm.get_cmap('tab20b', 31)  # 'tab20b' offers a distinct palette; we can define 31 colors explicitly\n\n# Plot the 2D embeddings with color based on numeric labels\nplt.figure(figsize=(10, 10))\nscatter = plt.scatter(embeddings_2d[:, 0], embeddings_2d[:, 1], \n                      c=numeric_labels, cmap=colors, s=20)  # Decreased marker size (s=20)\n\n# Add a color legend\nlegend1 = plt.legend(*scatter.legend_elements(), title=\"Person\")\nplt.gca().add_artist(legend1)\n\n# Set plot details\nplt.title('t-SNE of Image Embeddings (Color-coded)')\nplt.xlabel('Component 1')\nplt.ylabel('Component 2')\n\n# Show the plot\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-09-24T01:33:20.488106Z","iopub.execute_input":"2024-09-24T01:33:20.488943Z","iopub.status.idle":"2024-09-24T01:33:48.233273Z","shell.execute_reply.started":"2024-09-24T01:33:20.488903Z","shell.execute_reply":"2024-09-24T01:33:48.232352Z"},"trusted":true},"execution_count":14,"outputs":[{"name":"stdout","text":"\u001b[1m81/81\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 173ms/step\n","output_type":"stream"},{"name":"stderr","text":"/tmp/ipykernel_36/128802008.py:27: MatplotlibDeprecationWarning: The get_cmap function was deprecated in Matplotlib 3.7 and will be removed two minor releases later. Use ``matplotlib.colormaps[name]`` or ``matplotlib.colormaps.get_cmap(obj)`` instead.\n  colors = cm.get_cmap('tab20b', 31)  # 'tab20b' offers a distinct palette; we can define 31 colors explicitly\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x1000 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"# KDE + Inter-Class","metadata":{}},{"cell_type":"code","source":"import tensorflow as tf\nfrom tensorflow.keras import layers, models, regularizers\nimport matplotlib.pyplot as plt\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\n\nimport tensorflow as tf\nfrom tensorflow.keras import layers, models, regularizers\nimport numpy as np\n\nclass KDELossLayer(tf.keras.layers.Layer):\n    def __init__(self, bandwidth=1.0, margin=2.0, **kwargs):\n        super(KDELossLayer, self).__init__(**kwargs)\n        self.bandwidth = tf.cast(bandwidth, tf.float32)\n        self.margin = tf.cast(margin, tf.float32)\n\n    def call(self, inputs):\n        embeddings, labels = inputs\n\n        # Ensure embeddings are float32\n        embeddings = tf.cast(embeddings, tf.float32)\n\n        # Convert labels to one-hot encoding\n        labels = tf.argmax(labels, axis=-1, output_type=tf.int32)\n        one_hot_labels = tf.one_hot(labels, depth=tf.reduce_max(labels) + 1)\n\n        # Compute pairwise distances for all embeddings\n        pairwise_dists = tf.norm(\n            tf.expand_dims(embeddings, 1) - tf.expand_dims(embeddings, 0), axis=-1\n        )\n\n        # Gaussian kernel for all distances (intra-class density)\n        kde_density = tf.exp(-pairwise_dists**2 / (2 * self.bandwidth**2))\n\n        # For each class, apply the mask to isolate class members (intra-class mask)\n        mask = tf.matmul(one_hot_labels, tf.transpose(one_hot_labels))\n        \n        # Avoid self-contribution by masking out diagonal elements\n        mask_off_diagonal = tf.linalg.set_diag(mask, tf.zeros(tf.shape(mask)[0]))\n\n        # Compute KDE loss for each class (intra-class KDE)\n        kde_class_density = tf.reduce_sum(kde_density * mask_off_diagonal, axis=-1)\n\n        # Intra-class KDE loss\n        kde_loss = -tf.reduce_mean(tf.math.log(kde_class_density + 1e-8))\n        \n        # Add margin-based inter-class separation\n        # Create inter-class mask (1 - mask), where classes are different\n        inter_class_mask = 1.0 - mask\n        \n        # Compute distances for inter-class pairs only\n        inter_class_dists = pairwise_dists * inter_class_mask\n        \n        # Penalize distances that are smaller than the margin\n        # Penalty term for inter-class distances smaller than the margin\n        margin_penalty = tf.maximum(0.0, self.margin - inter_class_dists)\n\n        # Inter-class loss is the mean of the margin penalties\n        inter_class_loss = tf.reduce_mean(margin_penalty)\n\n        # Total loss: Intra-class (KDE loss) + Inter-class (Margin loss)\n        total_loss = kde_loss + inter_class_loss\n\n        return total_loss\n\ndef build_vgg19_kde_loss(input_shape, num_classes, embedding_dim, dropout_rate, weight_decay):\n    # Define input layers\n    inputs = layers.Input(shape=input_shape, name='input')\n    labels_input = layers.Input(shape=(num_classes,), name='labels_input', dtype='float32')\n\n    # Define VGG19 backbone (without the top layers)\n    base_model = tf.keras.applications.VGG19(include_top=False, input_shape=input_shape, weights='imagenet')\n\n    for layer in base_model.layers[:15]:  # Freeze the first 15 layers (you can adjust this number)\n        layer.trainable = False\n    \n    # Flatten the output of the VGG19 backbone\n    x = base_model.output\n    x = layers.Flatten()(x)\n    \n    x = layers.Dense(1231, activation='swish', kernel_regularizer=regularizers.l2(weight_decay), bias_regularizer=regularizers.l2(0.01))(x)\n    x = layers.Dropout(dropout_rate)(x)\n    x = layers.Dense(300, activation='swish', kernel_regularizer=regularizers.l2(weight_decay), bias_regularizer=regularizers.l2(0.01))(x)\n    x = layers.Dropout(dropout_rate)(x)\n    x = layers.Dense(75, activation='swish', kernel_regularizer=regularizers.l2(weight_decay), bias_regularizer=regularizers.l2(0.01))(x)\n    x = layers.Dropout(dropout_rate)(x)\n    x = layers.Dense(1003, activation='swish', kernel_regularizer=regularizers.l2(weight_decay), bias_regularizer=regularizers.l2(0.01))(x)\n    x = layers.Dense(embedding_dim, activation='swish')(x)\n\n    # Define the embedding model\n    embedding_model = models.Model(inputs=base_model.input, outputs=x, name='embedding_model')\n\n    # Generate embeddings for the inputs\n    embedding = embedding_model(inputs)\n\n    # Define logits for classification using the embedding\n    logits = layers.Dense(num_classes, activation='softmax', name='classification_layer')(embedding)\n\n    # Define the custom KDE loss layer\n    kde_loss_layer = KDELossLayer()\n    kde_loss_output = kde_loss_layer([embedding, labels_input])\n\n    # Define the full model with classification and KDE loss\n    full_model = models.Model(\n        inputs=[inputs, labels_input],\n        outputs=[logits, kde_loss_output],\n        name='full_model'\n    )\n\n    return embedding_model, full_model\n\ndef train_and_evaluate(model, train_generator, val_generator, steps_per_epoch, validation_steps, epochs, center_loss_weight, learning_rate):\n    optimizer = tf.keras.optimizers.RMSprop(learning_rate)\n\n    history = {\n        \"train_loss\": [],\n        \"train_class_loss\": [],\n        \"train_center_loss\": [],\n        \"train_acc\": [],\n        \"val_class_loss\": [],\n        \"val_center_loss\": [],\n        \"val_acc\": []\n    }\n\n    @tf.function\n    def train_step(inputs, labels):\n        with tf.GradientTape() as tape:\n            logits, center_loss = model([inputs, labels], training=True)\n            classification_loss = tf.keras.losses.CategoricalCrossentropy()(labels, logits)\n            total_loss = classification_loss + center_loss_weight * center_loss\n\n        gradients = tape.gradient(total_loss, model.trainable_variables)\n        optimizer.apply_gradients(zip(gradients, model.trainable_variables))\n\n        predictions = tf.argmax(logits, axis=-1)\n        labels_true = tf.argmax(labels, axis=-1)\n        train_acc = tf.reduce_mean(tf.cast(tf.equal(predictions, labels_true), tf.float32))\n\n        return total_loss, classification_loss, center_loss, train_acc\n\n    @tf.function\n    def eval_step(inputs, labels):\n        logits, center_loss = model([inputs, labels], training=False)\n        classification_loss = tf.keras.losses.CategoricalCrossentropy()(labels, logits)\n\n        predictions = tf.argmax(logits, axis=-1)\n        labels_true = tf.argmax(labels, axis=-1)\n        accuracy = tf.reduce_mean(tf.cast(tf.equal(predictions, labels_true), tf.float32))\n\n        return classification_loss, center_loss, accuracy\n\n    for epoch in range(epochs):\n        print(f\"Epoch {epoch+1}/{epochs}\")\n\n        # Training loop\n        epoch_loss, epoch_class_loss, epoch_center_loss, epoch_acc = 0, 0, 0, 0\n        for step in range(steps_per_epoch):\n            inputs_batch, labels_batch = next(train_generator)\n            loss, class_loss, center_loss, acc = train_step(inputs_batch, labels_batch)\n            epoch_loss += loss\n            epoch_class_loss += class_loss\n            epoch_center_loss += center_loss\n            epoch_acc += acc\n\n        epoch_loss /= steps_per_epoch\n        epoch_class_loss /= steps_per_epoch\n        epoch_center_loss /= steps_per_epoch\n        epoch_acc /= steps_per_epoch\n\n        print(f\"Train Loss: {epoch_loss:.4f}, Class Loss: {epoch_class_loss:.4f}, Center Loss: {epoch_center_loss:.4f}, Acc: {epoch_acc:.4f}\")\n\n        history[\"train_loss\"].append(epoch_loss)\n        history[\"train_class_loss\"].append(epoch_class_loss)\n        history[\"train_center_loss\"].append(epoch_center_loss)\n        history[\"train_acc\"].append(epoch_acc)\n\n        # Validation loop\n        val_class_loss, val_center_loss, val_acc = 0, 0, 0\n        for step in range(validation_steps):\n            inputs_batch, labels_batch = next(val_generator)\n            class_loss, center_loss, acc = eval_step(inputs_batch, labels_batch)\n            val_class_loss += class_loss\n            val_center_loss += center_loss\n            val_acc += acc\n\n        val_class_loss /= validation_steps\n        val_center_loss /= validation_steps\n        val_acc /= validation_steps\n\n        print(f\"Val Class Loss: {val_class_loss:.4f}, Val Center Loss: {val_center_loss:.4f}, Val Acc: {val_acc:.4f}\")\n\n        history[\"val_class_loss\"].append(val_class_loss)\n        history[\"val_center_loss\"].append(val_center_loss)\n        history[\"val_acc\"].append(val_acc)\n\n    return history\n\n# Initialize ImageDataGenerator with augmentation options (without rescaling)\ntrain_datagen = ImageDataGenerator(\n    rotation_range=20,           # Randomly rotate images by 20 degrees\n    width_shift_range=0.2,       # Randomly shift images horizontally\n    height_shift_range=0.2,      # Randomly shift images vertically\n    shear_range=0.2,             # Shear transformation\n    zoom_range=0.2,              # Zoom in/out\n    horizontal_flip=True,        # Random horizontal flipping\n    fill_mode='nearest'          # Filling pixels after transformations\n)\n\n# Example usage with specified values\ninput_shape = (224, 224, 3)        # Input shape for images (224x224 RGB)\nnum_classes = 31                   # Number of classes in the dataset\nembedding_dim = 768              # Dimensionality of the embedding space\ndropout_rate = 0.1               # Dropout rate for regularization\nweight_decay = 0.05 #0.005            # L2 regularization weight\ncenter_loss_weight = 0.1 #0.0001          # Weight for center loss\nlearning_rate = 1e-4               # Learning rate for the optimizer\nbatch_size = 32                    # Batch size for training\nepochs = 75                      # Number of epochs to train\n\nval_datagen = ImageDataGenerator()  # No additional augmentations for validation\n\n# Load and augment training data\ntrain_generator = train_datagen.flow(X_train, y_train, batch_size=batch_size)\n\n# Load validation data\nval_generator = val_datagen.flow(X_val, y_val, batch_size=batch_size)\n\nsteps_per_epoch = len(X_train) // batch_size\nvalidation_steps = len(X_val)  // batch_size\n\n# Build the model using VGG19 and center loss\nembedding_model, full_model = build_vgg19_kde_loss(input_shape, num_classes, embedding_dim, dropout_rate, weight_decay)\n# Train the model using data generators\nhistory = train_and_evaluate(full_model, train_generator, val_generator, steps_per_epoch, validation_steps, epochs, center_loss_weight, learning_rate)\n","metadata":{"execution":{"iopub.status.busy":"2024-09-24T02:38:29.475693Z","iopub.execute_input":"2024-09-24T02:38:29.476077Z","iopub.status.idle":"2024-09-24T03:20:10.973449Z","shell.execute_reply.started":"2024-09-24T02:38:29.476041Z","shell.execute_reply":"2024-09-24T03:20:10.972478Z"},"trusted":true},"execution_count":26,"outputs":[{"name":"stdout","text":"Epoch 1/75\nTrain Loss: 4.2535, Class Loss: 3.4289, Center Loss: 8.2453, Acc: 0.0569\nVal Class Loss: 3.3732, Val Center Loss: 7.4494, Val Acc: 0.0885\nEpoch 2/75\nTrain Loss: 3.9912, Class Loss: 3.2140, Center Loss: 7.7713, Acc: 0.0938\nVal Class Loss: 2.8908, Val Center Loss: 7.7925, Val Acc: 0.1094\nEpoch 3/75\nTrain Loss: 3.8813, Class Loss: 3.0527, Center Loss: 8.2859, Acc: 0.1585\nVal Class Loss: 2.7014, Val Center Loss: 8.1383, Val Acc: 0.1823\nEpoch 4/75\nTrain Loss: 3.5106, Class Loss: 2.6880, Center Loss: 8.2268, Acc: 0.1830\nVal Class Loss: 2.5710, Val Center Loss: 8.2019, Val Acc: 0.2344\nEpoch 5/75\nTrain Loss: 3.3692, Class Loss: 2.4808, Center Loss: 8.8840, Acc: 0.2327\nVal Class Loss: 2.3341, Val Center Loss: 7.1850, Val Acc: 0.2630\nEpoch 6/75\nTrain Loss: 3.2382, Class Loss: 2.3220, Center Loss: 9.1627, Acc: 0.2740\nVal Class Loss: 2.0978, Val Center Loss: 7.8464, Val Acc: 0.3516\nEpoch 7/75\nTrain Loss: 3.0825, Class Loss: 2.1889, Center Loss: 8.9355, Acc: 0.3209\nVal Class Loss: 1.8608, Val Center Loss: 7.6809, Val Acc: 0.4036\nEpoch 8/75\nTrain Loss: 2.9251, Class Loss: 2.0088, Center Loss: 9.1630, Acc: 0.3783\nVal Class Loss: 1.9110, Val Center Loss: 8.2451, Val Acc: 0.4323\nEpoch 9/75\nTrain Loss: 2.6932, Class Loss: 1.7823, Center Loss: 9.1091, Acc: 0.4526\nVal Class Loss: 1.7757, Val Center Loss: 7.8488, Val Acc: 0.3906\nEpoch 10/75\nTrain Loss: 2.5584, Class Loss: 1.6541, Center Loss: 9.0432, Acc: 0.4944\nVal Class Loss: 1.6005, Val Center Loss: 8.4550, Val Acc: 0.4505\nEpoch 11/75\nTrain Loss: 2.4895, Class Loss: 1.5307, Center Loss: 9.5871, Acc: 0.5273\nVal Class Loss: 1.4128, Val Center Loss: 8.1155, Val Acc: 0.5469\nEpoch 12/75\nTrain Loss: 2.3036, Class Loss: 1.3376, Center Loss: 9.6604, Acc: 0.5915\nVal Class Loss: 1.1681, Val Center Loss: 8.0834, Val Acc: 0.6380\nEpoch 13/75\nTrain Loss: 2.2075, Class Loss: 1.2489, Center Loss: 9.5864, Acc: 0.6289\nVal Class Loss: 1.0025, Val Center Loss: 8.1752, Val Acc: 0.6901\nEpoch 14/75\nTrain Loss: 1.9938, Class Loss: 1.0593, Center Loss: 9.3447, Acc: 0.6903\nVal Class Loss: 0.9616, Val Center Loss: 8.7191, Val Acc: 0.7031\nEpoch 15/75\nTrain Loss: 1.9175, Class Loss: 0.9385, Center Loss: 9.7894, Acc: 0.7059\nVal Class Loss: 0.8266, Val Center Loss: 9.1752, Val Acc: 0.7656\nEpoch 16/75\nTrain Loss: 1.7937, Class Loss: 0.8702, Center Loss: 9.2349, Acc: 0.7416\nVal Class Loss: 1.1333, Val Center Loss: 8.6541, Val Acc: 0.6380\nEpoch 17/75\nTrain Loss: 1.6344, Class Loss: 0.7257, Center Loss: 9.0873, Acc: 0.7941\nVal Class Loss: 0.6915, Val Center Loss: 8.7439, Val Acc: 0.8073\nEpoch 18/75\nTrain Loss: 1.5676, Class Loss: 0.6656, Center Loss: 9.0204, Acc: 0.8119\nVal Class Loss: 0.7977, Val Center Loss: 8.2965, Val Acc: 0.7812\nEpoch 19/75\nTrain Loss: 1.4190, Class Loss: 0.5602, Center Loss: 8.5881, Acc: 0.8393\nVal Class Loss: 0.5230, Val Center Loss: 8.1618, Val Acc: 0.8620\nEpoch 20/75\nTrain Loss: 1.4474, Class Loss: 0.5634, Center Loss: 8.8396, Acc: 0.8527\nVal Class Loss: 0.5058, Val Center Loss: 7.9678, Val Acc: 0.8516\nEpoch 21/75\nTrain Loss: 1.2914, Class Loss: 0.4229, Center Loss: 8.6851, Acc: 0.8962\nVal Class Loss: 0.4331, Val Center Loss: 8.2966, Val Acc: 0.9089\nEpoch 22/75\nTrain Loss: 1.2819, Class Loss: 0.3967, Center Loss: 8.8515, Acc: 0.9040\nVal Class Loss: 0.4478, Val Center Loss: 8.2847, Val Acc: 0.8620\nEpoch 23/75\nTrain Loss: 1.1943, Class Loss: 0.3508, Center Loss: 8.4348, Acc: 0.9062\nVal Class Loss: 0.4498, Val Center Loss: 8.2988, Val Acc: 0.8750\nEpoch 24/75\nTrain Loss: 1.2312, Class Loss: 0.3776, Center Loss: 8.5355, Acc: 0.9062\nVal Class Loss: 0.7193, Val Center Loss: 8.0857, Val Acc: 0.8203\nEpoch 25/75\nTrain Loss: 1.1439, Class Loss: 0.2923, Center Loss: 8.5156, Acc: 0.9230\nVal Class Loss: 0.4696, Val Center Loss: 7.6866, Val Acc: 0.8646\nEpoch 26/75\nTrain Loss: 1.0629, Class Loss: 0.2432, Center Loss: 8.1963, Acc: 0.9448\nVal Class Loss: 0.6503, Val Center Loss: 8.5202, Val Acc: 0.8307\nEpoch 27/75\nTrain Loss: 1.0735, Class Loss: 0.2282, Center Loss: 8.4532, Acc: 0.9492\nVal Class Loss: 0.3156, Val Center Loss: 7.6173, Val Acc: 0.9141\nEpoch 28/75\nTrain Loss: 1.0724, Class Loss: 0.2418, Center Loss: 8.3059, Acc: 0.9420\nVal Class Loss: 0.3006, Val Center Loss: 7.3302, Val Acc: 0.9297\nEpoch 29/75\nTrain Loss: 0.9887, Class Loss: 0.1786, Center Loss: 8.1006, Acc: 0.9637\nVal Class Loss: 0.4078, Val Center Loss: 8.2863, Val Acc: 0.9062\nEpoch 30/75\nTrain Loss: 0.9524, Class Loss: 0.1447, Center Loss: 8.0775, Acc: 0.9676\nVal Class Loss: 0.4406, Val Center Loss: 8.1814, Val Acc: 0.8750\nEpoch 31/75\nTrain Loss: 0.9516, Class Loss: 0.1678, Center Loss: 7.8381, Acc: 0.9626\nVal Class Loss: 0.2635, Val Center Loss: 7.7014, Val Acc: 0.9141\nEpoch 32/75\nTrain Loss: 0.9120, Class Loss: 0.1183, Center Loss: 7.9374, Acc: 0.9766\nVal Class Loss: 0.2644, Val Center Loss: 7.5571, Val Acc: 0.9271\nEpoch 33/75\nTrain Loss: 0.9110, Class Loss: 0.1206, Center Loss: 7.9049, Acc: 0.9738\nVal Class Loss: 0.2554, Val Center Loss: 7.5616, Val Acc: 0.9323\nEpoch 34/75\nTrain Loss: 0.9106, Class Loss: 0.1520, Center Loss: 7.5864, Acc: 0.9660\nVal Class Loss: 0.3548, Val Center Loss: 7.9359, Val Acc: 0.8958\nEpoch 35/75\nTrain Loss: 0.9652, Class Loss: 0.1527, Center Loss: 8.1253, Acc: 0.9648\nVal Class Loss: 0.3384, Val Center Loss: 8.3103, Val Acc: 0.9245\nEpoch 36/75\nTrain Loss: 0.9200, Class Loss: 0.1322, Center Loss: 7.8781, Acc: 0.9732\nVal Class Loss: 0.2885, Val Center Loss: 8.0447, Val Acc: 0.9323\nEpoch 37/75\nTrain Loss: 0.8830, Class Loss: 0.1138, Center Loss: 7.6919, Acc: 0.9766\nVal Class Loss: 0.2368, Val Center Loss: 7.5953, Val Acc: 0.9427\nEpoch 38/75\nTrain Loss: 0.8646, Class Loss: 0.0971, Center Loss: 7.6753, Acc: 0.9794\nVal Class Loss: 0.3784, Val Center Loss: 7.3036, Val Acc: 0.8932\nEpoch 39/75\nTrain Loss: 0.8773, Class Loss: 0.1186, Center Loss: 7.5872, Acc: 0.9771\nVal Class Loss: 0.2779, Val Center Loss: 7.7937, Val Acc: 0.9427\nEpoch 40/75\nTrain Loss: 0.8740, Class Loss: 0.1091, Center Loss: 7.6491, Acc: 0.9754\nVal Class Loss: 0.2394, Val Center Loss: 7.6385, Val Acc: 0.9453\nEpoch 41/75\nTrain Loss: 0.8312, Class Loss: 0.1198, Center Loss: 7.1136, Acc: 0.9771\nVal Class Loss: 0.2340, Val Center Loss: 7.1188, Val Acc: 0.9427\nEpoch 42/75\nTrain Loss: 0.8256, Class Loss: 0.0741, Center Loss: 7.5147, Acc: 0.9855\nVal Class Loss: 0.3000, Val Center Loss: 7.1386, Val Acc: 0.9297\nEpoch 43/75\nTrain Loss: 0.8066, Class Loss: 0.0587, Center Loss: 7.4783, Acc: 0.9883\nVal Class Loss: 0.2815, Val Center Loss: 7.3548, Val Acc: 0.9297\nEpoch 44/75\nTrain Loss: 0.8408, Class Loss: 0.1076, Center Loss: 7.3322, Acc: 0.9788\nVal Class Loss: 0.3014, Val Center Loss: 7.8790, Val Acc: 0.9297\nEpoch 45/75\nTrain Loss: 0.8200, Class Loss: 0.0657, Center Loss: 7.5428, Acc: 0.9855\nVal Class Loss: 0.2719, Val Center Loss: 6.5026, Val Acc: 0.9401\nEpoch 46/75\nTrain Loss: 0.8355, Class Loss: 0.1039, Center Loss: 7.3166, Acc: 0.9794\nVal Class Loss: 0.2375, Val Center Loss: 7.2970, Val Acc: 0.9531\nEpoch 47/75\nTrain Loss: 0.8494, Class Loss: 0.0858, Center Loss: 7.6363, Acc: 0.9838\nVal Class Loss: 0.2396, Val Center Loss: 7.1611, Val Acc: 0.9505\nEpoch 48/75\nTrain Loss: 0.8091, Class Loss: 0.0635, Center Loss: 7.4565, Acc: 0.9860\nVal Class Loss: 0.2627, Val Center Loss: 7.4110, Val Acc: 0.9453\nEpoch 49/75\nTrain Loss: 0.8244, Class Loss: 0.0797, Center Loss: 7.4468, Acc: 0.9838\nVal Class Loss: 0.1551, Val Center Loss: 7.0371, Val Acc: 0.9661\nEpoch 50/75\nTrain Loss: 0.8016, Class Loss: 0.0487, Center Loss: 7.5298, Acc: 0.9905\nVal Class Loss: 0.2231, Val Center Loss: 7.2447, Val Acc: 0.9505\nEpoch 51/75\nTrain Loss: 0.7861, Class Loss: 0.0593, Center Loss: 7.2681, Acc: 0.9888\nVal Class Loss: 0.2105, Val Center Loss: 7.3036, Val Acc: 0.9453\nEpoch 52/75\nTrain Loss: 0.7545, Class Loss: 0.0462, Center Loss: 7.0823, Acc: 0.9911\nVal Class Loss: 0.2297, Val Center Loss: 7.4281, Val Acc: 0.9479\nEpoch 53/75\nTrain Loss: 0.7884, Class Loss: 0.0757, Center Loss: 7.1265, Acc: 0.9827\nVal Class Loss: 0.6769, Val Center Loss: 9.0899, Val Acc: 0.8672\nEpoch 54/75\nTrain Loss: 0.8462, Class Loss: 0.1001, Center Loss: 7.4614, Acc: 0.9732\nVal Class Loss: 0.2362, Val Center Loss: 6.6820, Val Acc: 0.9479\nEpoch 55/75\nTrain Loss: 0.7617, Class Loss: 0.0567, Center Loss: 7.0499, Acc: 0.9888\nVal Class Loss: 0.2233, Val Center Loss: 6.7768, Val Acc: 0.9427\nEpoch 56/75\nTrain Loss: 0.8300, Class Loss: 0.1163, Center Loss: 7.1366, Acc: 0.9771\nVal Class Loss: 0.3451, Val Center Loss: 7.5671, Val Acc: 0.9141\nEpoch 57/75\nTrain Loss: 0.7998, Class Loss: 0.0648, Center Loss: 7.3504, Acc: 0.9866\nVal Class Loss: 0.8343, Val Center Loss: 7.3507, Val Acc: 0.8255\nEpoch 58/75\nTrain Loss: 0.7616, Class Loss: 0.0661, Center Loss: 6.9542, Acc: 0.9860\nVal Class Loss: 0.1667, Val Center Loss: 7.6379, Val Acc: 0.9531\nEpoch 59/75\nTrain Loss: 0.7639, Class Loss: 0.0549, Center Loss: 7.0899, Acc: 0.9911\nVal Class Loss: 0.2922, Val Center Loss: 6.6924, Val Acc: 0.9349\nEpoch 60/75\nTrain Loss: 0.8357, Class Loss: 0.1102, Center Loss: 7.2551, Acc: 0.9749\nVal Class Loss: 0.2817, Val Center Loss: 6.7082, Val Acc: 0.9427\nEpoch 61/75\nTrain Loss: 0.7853, Class Loss: 0.0644, Center Loss: 7.2095, Acc: 0.9872\nVal Class Loss: 0.2276, Val Center Loss: 7.2647, Val Acc: 0.9479\nEpoch 62/75\nTrain Loss: 0.7823, Class Loss: 0.0515, Center Loss: 7.3082, Acc: 0.9911\nVal Class Loss: 1.0579, Val Center Loss: 8.3527, Val Acc: 0.7786\nEpoch 63/75\nTrain Loss: 0.8353, Class Loss: 0.1004, Center Loss: 7.3488, Acc: 0.9827\nVal Class Loss: 0.3361, Val Center Loss: 7.0275, Val Acc: 0.9323\nEpoch 64/75\nTrain Loss: 0.7753, Class Loss: 0.0669, Center Loss: 7.0838, Acc: 0.9877\nVal Class Loss: 0.6744, Val Center Loss: 7.4898, Val Acc: 0.8594\nEpoch 65/75\nTrain Loss: 0.8063, Class Loss: 0.0702, Center Loss: 7.3606, Acc: 0.9844\nVal Class Loss: 0.2024, Val Center Loss: 7.6437, Val Acc: 0.9583\nEpoch 66/75\nTrain Loss: 0.7479, Class Loss: 0.0527, Center Loss: 6.9523, Acc: 0.9916\nVal Class Loss: 0.2898, Val Center Loss: 6.1274, Val Acc: 0.9271\nEpoch 67/75\nTrain Loss: 0.7722, Class Loss: 0.0604, Center Loss: 7.1184, Acc: 0.9894\nVal Class Loss: 0.2167, Val Center Loss: 6.8801, Val Acc: 0.9557\nEpoch 68/75\nTrain Loss: 0.7526, Class Loss: 0.0483, Center Loss: 7.0421, Acc: 0.9888\nVal Class Loss: 0.1586, Val Center Loss: 6.7567, Val Acc: 0.9635\nEpoch 69/75\nTrain Loss: 0.7461, Class Loss: 0.0472, Center Loss: 6.9891, Acc: 0.9911\nVal Class Loss: 0.3997, Val Center Loss: 7.6957, Val Acc: 0.9219\nEpoch 70/75\nTrain Loss: 0.7547, Class Loss: 0.0677, Center Loss: 6.8694, Acc: 0.9866\nVal Class Loss: 0.2811, Val Center Loss: 6.3053, Val Acc: 0.9505\nEpoch 71/75\nTrain Loss: 0.7755, Class Loss: 0.0684, Center Loss: 7.0711, Acc: 0.9872\nVal Class Loss: 0.2400, Val Center Loss: 7.3049, Val Acc: 0.9427\nEpoch 72/75\nTrain Loss: 0.7766, Class Loss: 0.0549, Center Loss: 7.2171, Acc: 0.9894\nVal Class Loss: 0.1849, Val Center Loss: 6.5820, Val Acc: 0.9557\nEpoch 73/75\nTrain Loss: 0.7115, Class Loss: 0.0381, Center Loss: 6.7339, Acc: 0.9933\nVal Class Loss: 0.2510, Val Center Loss: 7.2437, Val Acc: 0.9453\nEpoch 74/75\nTrain Loss: 0.7066, Class Loss: 0.0474, Center Loss: 6.5926, Acc: 0.9894\nVal Class Loss: 0.1563, Val Center Loss: 6.0824, Val Acc: 0.9714\nEpoch 75/75\nTrain Loss: 0.7292, Class Loss: 0.0443, Center Loss: 6.8492, Acc: 0.9927\nVal Class Loss: 0.3336, Val Center Loss: 7.6602, Val Acc: 0.9219\n","output_type":"stream"}]},{"cell_type":"code","source":"import numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.manifold import TSNE\nfrom sklearn.preprocessing import LabelEncoder\nfrom matplotlib import cm\nfrom matplotlib.colors import ListedColormap\n\n\n#embedding_model = models.Model(inputs=model.inputs[0], outputs=model.get_layer('embeddings').output)\n\n# Generate embeddings with 'training=False'\nembeddings = embedding_model.predict(images_np_preprocessed)\n\n# Sample image embeddings and labels\n# image_embeddings = ... (your embeddings)\n# labels_np = ... (your string labels)\n\n# Convert string labels to numeric labels\nlabel_encoder = LabelEncoder()\nnumeric_labels = label_encoder.fit_transform(labels_np)\n\n# Use t-SNE to reduce the embedding space to 2D for visualization\ntsne = TSNE(n_components=2, random_state=42)\nembeddings_2d = tsne.fit_transform(embeddings)  # Use your actual embeddings here\n\n# Create a custom color map to support 31 classes\ncolors = cm.get_cmap('tab20b', 31)  # 'tab20b' offers a distinct palette; we can define 31 colors explicitly\n\n# Plot the 2D embeddings with color based on numeric labels\nplt.figure(figsize=(10, 10))\nscatter = plt.scatter(embeddings_2d[:, 0], embeddings_2d[:, 1], \n                      c=numeric_labels, cmap=colors, s=20)  # Decreased marker size (s=20)\n\n# Add a color legend\nlegend1 = plt.legend(*scatter.legend_elements(), title=\"Person\")\nplt.gca().add_artist(legend1)\n\n# Set plot details\nplt.title('t-SNE of Image Embeddings (Color-coded)')\nplt.xlabel('Component 1')\nplt.ylabel('Component 2')\n\n# Show the plot\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-09-24T03:21:51.622432Z","iopub.execute_input":"2024-09-24T03:21:51.622830Z","iopub.status.idle":"2024-09-24T03:22:20.216143Z","shell.execute_reply.started":"2024-09-24T03:21:51.622790Z","shell.execute_reply":"2024-09-24T03:22:20.215143Z"},"trusted":true},"execution_count":27,"outputs":[{"name":"stdout","text":"\u001b[1m81/81\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m15s\u001b[0m 178ms/step\n","output_type":"stream"},{"name":"stderr","text":"/tmp/ipykernel_36/128802008.py:27: MatplotlibDeprecationWarning: The get_cmap function was deprecated in Matplotlib 3.7 and will be removed two minor releases later. Use ``matplotlib.colormaps[name]`` or ``matplotlib.colormaps.get_cmap(obj)`` instead.\n  colors = cm.get_cmap('tab20b', 31)  # 'tab20b' offers a distinct palette; we can define 31 colors explicitly\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x1000 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"# KDE + inter-class + variance-aware( sub-cluster formation)","metadata":{}},{"cell_type":"code","source":"import tensorflow as tf\nfrom tensorflow.keras import layers, models, regularizers\nimport matplotlib.pyplot as plt\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\n\nimport tensorflow as tf\nfrom tensorflow.keras import layers, models, regularizers\nimport numpy as np\n\nclass KDELossLayer(tf.keras.layers.Layer):\n    def __init__(self, bandwidth=1.0, margin=1.0, variance_penalty=1.0, cluster_separation=1.0, **kwargs):\n        super(KDELossLayer, self).__init__(**kwargs)\n        self.bandwidth = tf.cast(bandwidth, tf.float32)\n        self.margin = tf.cast(margin, tf.float32)\n        self.variance_penalty = tf.cast(variance_penalty, tf.float32)  # Regularization for intra-cluster spread\n        self.cluster_separation = tf.cast(cluster_separation, tf.float32)  # Separation between sub-clusters\n\n    def call(self, inputs):\n        embeddings, labels = inputs\n\n        # Ensure embeddings are float32\n        embeddings = tf.cast(embeddings, tf.float32)\n\n        # Convert labels to one-hot encoding\n        labels = tf.argmax(labels, axis=-1, output_type=tf.int32)\n        one_hot_labels = tf.one_hot(labels, depth=tf.reduce_max(labels) + 1)\n\n        # Compute pairwise distances for all embeddings\n        pairwise_dists = tf.norm(\n            tf.expand_dims(embeddings, 1) - tf.expand_dims(embeddings, 0), axis=-1\n        )\n\n        # Gaussian kernel for all distances (intra-class density)\n        kde_density = tf.exp(-pairwise_dists**2 / (2 * self.bandwidth**2))\n\n        # For each class, apply the mask to isolate class members (intra-class mask)\n        mask = tf.matmul(one_hot_labels, tf.transpose(one_hot_labels))\n        \n        # Avoid self-contribution by masking out diagonal elements\n        mask_off_diagonal = tf.linalg.set_diag(mask, tf.zeros(tf.shape(mask)[0]))\n\n        # Compute KDE loss for each class (intra-class KDE)\n        kde_class_density = tf.reduce_sum(kde_density * mask_off_diagonal, axis=-1)\n\n        # Intra-class KDE loss\n        kde_loss = -tf.reduce_mean(tf.math.log(kde_class_density + 1e-8))\n        \n        # Variance-aware regularization for intra-cluster tightness (minimize intra-cluster variance)\n        intra_cluster_var = tf.reduce_mean(pairwise_dists * mask_off_diagonal, axis=-1)\n        variance_regularization = self.variance_penalty * tf.reduce_mean(intra_cluster_var)\n\n        # Inter-cluster separation (encourage separation between different sub-clusters within the same class)\n        cluster_centroids = tf.matmul(tf.transpose(one_hot_labels), embeddings) / tf.reduce_sum(one_hot_labels, axis=0, keepdims=True)\n        centroid_dists = tf.norm(tf.expand_dims(cluster_centroids, 1) - tf.expand_dims(cluster_centroids, 0), axis=-1)\n        inter_cluster_separation = tf.reduce_mean(self.cluster_separation * centroid_dists)\n\n        # Margin-based inter-class separation (similar to original)\n        inter_class_mask = 1.0 - mask\n        inter_class_dists = pairwise_dists * inter_class_mask\n        margin_penalty = tf.maximum(0.0, self.margin - inter_class_dists)\n        inter_class_loss = tf.reduce_mean(margin_penalty)\n\n        # Total loss: Intra-class (KDE loss) + Inter-class (Margin loss) + Variance-Aware Regularization\n        total_loss = kde_loss + inter_class_loss + variance_regularization - inter_cluster_separation\n\n        return total_loss\n\n\ndef build_vgg19_kde_loss(input_shape, num_classes, embedding_dim, dropout_rate, weight_decay):\n    # Define input layers\n    inputs = layers.Input(shape=input_shape, name='input')\n    labels_input = layers.Input(shape=(num_classes,), name='labels_input', dtype='float32')\n\n    # Define VGG19 backbone (without the top layers)\n    base_model = tf.keras.applications.VGG19(include_top=False, input_shape=input_shape, weights='imagenet')\n\n    for layer in base_model.layers[:15]:  # Freeze the first 15 layers (you can adjust this number)\n        layer.trainable = False\n    \n    # Flatten the output of the VGG19 backbone\n    x = base_model.output\n    x = layers.Flatten()(x)\n    \n    x = layers.Dense(1231, activation='swish', kernel_regularizer=regularizers.l2(weight_decay), bias_regularizer=regularizers.l2(0.01))(x)\n    x = layers.Dropout(dropout_rate)(x)\n    x = layers.Dense(300, activation='swish', kernel_regularizer=regularizers.l2(weight_decay), bias_regularizer=regularizers.l2(0.01))(x)\n    x = layers.Dropout(dropout_rate)(x)\n    x = layers.Dense(75, activation='swish', kernel_regularizer=regularizers.l2(weight_decay), bias_regularizer=regularizers.l2(0.01))(x)\n    x = layers.Dropout(dropout_rate)(x)\n    x = layers.Dense(1003, activation='swish', kernel_regularizer=regularizers.l2(weight_decay), bias_regularizer=regularizers.l2(0.01))(x)\n    x = layers.Dense(embedding_dim, activation='swish')(x)\n\n    # Define the embedding model\n    embedding_model = models.Model(inputs=base_model.input, outputs=x, name='embedding_model')\n\n    # Generate embeddings for the inputs\n    embedding = embedding_model(inputs)\n\n    # Define logits for classification using the embedding\n    logits = layers.Dense(num_classes, activation='softmax', name='classification_layer')(embedding)\n\n    # Define the custom KDE loss layer\n    kde_loss_layer = KDELossLayer()\n    kde_loss_output = kde_loss_layer([embedding, labels_input])\n\n    # Define the full model with classification and KDE loss\n    full_model = models.Model(\n        inputs=[inputs, labels_input],\n        outputs=[logits, kde_loss_output],\n        name='full_model'\n    )\n\n    return embedding_model, full_model\n\ndef train_and_evaluate(model, train_generator, val_generator, steps_per_epoch, validation_steps, epochs, center_loss_weight, learning_rate):\n    optimizer = tf.keras.optimizers.RMSprop(learning_rate)\n\n    history = {\n        \"train_loss\": [],\n        \"train_class_loss\": [],\n        \"train_center_loss\": [],\n        \"train_acc\": [],\n        \"val_class_loss\": [],\n        \"val_center_loss\": [],\n        \"val_acc\": []\n    }\n\n    @tf.function\n    def train_step(inputs, labels):\n        with tf.GradientTape() as tape:\n            logits, center_loss = model([inputs, labels], training=True)\n            classification_loss = tf.keras.losses.CategoricalCrossentropy()(labels, logits)\n            total_loss = classification_loss + center_loss_weight * center_loss\n\n        gradients = tape.gradient(total_loss, model.trainable_variables)\n        optimizer.apply_gradients(zip(gradients, model.trainable_variables))\n\n        predictions = tf.argmax(logits, axis=-1)\n        labels_true = tf.argmax(labels, axis=-1)\n        train_acc = tf.reduce_mean(tf.cast(tf.equal(predictions, labels_true), tf.float32))\n\n        return total_loss, classification_loss, center_loss, train_acc\n\n    @tf.function\n    def eval_step(inputs, labels):\n        logits, center_loss = model([inputs, labels], training=False)\n        classification_loss = tf.keras.losses.CategoricalCrossentropy()(labels, logits)\n\n        predictions = tf.argmax(logits, axis=-1)\n        labels_true = tf.argmax(labels, axis=-1)\n        accuracy = tf.reduce_mean(tf.cast(tf.equal(predictions, labels_true), tf.float32))\n\n        return classification_loss, center_loss, accuracy\n\n    for epoch in range(epochs):\n        print(f\"Epoch {epoch+1}/{epochs}\")\n\n        # Training loop\n        epoch_loss, epoch_class_loss, epoch_center_loss, epoch_acc = 0, 0, 0, 0\n        for step in range(steps_per_epoch):\n            inputs_batch, labels_batch = next(train_generator)\n            loss, class_loss, center_loss, acc = train_step(inputs_batch, labels_batch)\n            epoch_loss += loss\n            epoch_class_loss += class_loss\n            epoch_center_loss += center_loss\n            epoch_acc += acc\n\n        epoch_loss /= steps_per_epoch\n        epoch_class_loss /= steps_per_epoch\n        epoch_center_loss /= steps_per_epoch\n        epoch_acc /= steps_per_epoch\n\n        print(f\"Train Loss: {epoch_loss:.4f}, Class Loss: {epoch_class_loss:.4f}, Center Loss: {epoch_center_loss:.4f}, Acc: {epoch_acc:.4f}\")\n\n        history[\"train_loss\"].append(epoch_loss)\n        history[\"train_class_loss\"].append(epoch_class_loss)\n        history[\"train_center_loss\"].append(epoch_center_loss)\n        history[\"train_acc\"].append(epoch_acc)\n\n        # Validation loop\n        val_class_loss, val_center_loss, val_acc = 0, 0, 0\n        for step in range(validation_steps):\n            inputs_batch, labels_batch = next(val_generator)\n            class_loss, center_loss, acc = eval_step(inputs_batch, labels_batch)\n            val_class_loss += class_loss\n            val_center_loss += center_loss\n            val_acc += acc\n\n        val_class_loss /= validation_steps\n        val_center_loss /= validation_steps\n        val_acc /= validation_steps\n\n        print(f\"Val Class Loss: {val_class_loss:.4f}, Val Center Loss: {val_center_loss:.4f}, Val Acc: {val_acc:.4f}\")\n\n        history[\"val_class_loss\"].append(val_class_loss)\n        history[\"val_center_loss\"].append(val_center_loss)\n        history[\"val_acc\"].append(val_acc)\n\n    return history\n\n# Initialize ImageDataGenerator with augmentation options (without rescaling)\ntrain_datagen = ImageDataGenerator(\n    rotation_range=20,           # Randomly rotate images by 20 degrees\n    width_shift_range=0.2,       # Randomly shift images horizontally\n    height_shift_range=0.2,      # Randomly shift images vertically\n    shear_range=0.2,             # Shear transformation\n    zoom_range=0.2,              # Zoom in/out\n    horizontal_flip=True,        # Random horizontal flipping\n    fill_mode='nearest'          # Filling pixels after transformations\n)\n\n# Example usage with specified values\ninput_shape = (224, 224, 3)        # Input shape for images (224x224 RGB)\nnum_classes = 31                   # Number of classes in the dataset\nembedding_dim = 768              # Dimensionality of the embedding space\ndropout_rate = 0.1               # Dropout rate for regularization\nweight_decay = 0.05 #0.005            # L2 regularization weight\ncenter_loss_weight = 0.1 #0.0001          # Weight for center loss\nlearning_rate = 1e-4               # Learning rate for the optimizer\nbatch_size = 32                    # Batch size for training\nepochs = 30                      # Number of epochs to train\n\nval_datagen = ImageDataGenerator()  # No additional augmentations for validation\n\n# Load and augment training data\ntrain_generator = train_datagen.flow(X_train, y_train, batch_size=batch_size)\n\n# Load validation data\nval_generator = val_datagen.flow(X_val, y_val, batch_size=batch_size)\n\nsteps_per_epoch = len(X_train) // batch_size\nvalidation_steps = len(X_val)  // batch_size\n\n# Build the model using VGG19 and center loss\nembedding_model, full_model = build_vgg19_kde_loss(input_shape, num_classes, embedding_dim, dropout_rate, weight_decay)\n# Train the model using data generators\nhistory = train_and_evaluate(full_model, train_generator, val_generator, steps_per_epoch, validation_steps, epochs, center_loss_weight, learning_rate)\n","metadata":{"execution":{"iopub.status.busy":"2024-09-24T03:46:18.819415Z","iopub.execute_input":"2024-09-24T03:46:18.819862Z","iopub.status.idle":"2024-09-24T03:46:22.528981Z","shell.execute_reply.started":"2024-09-24T03:46:18.819821Z","shell.execute_reply":"2024-09-24T03:46:22.527685Z"},"trusted":true},"execution_count":28,"outputs":[{"name":"stdout","text":"Epoch 1/30\n","output_type":"stream"},{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mInvalidArgumentError\u001b[0m                      Traceback (most recent call last)","Cell \u001b[0;32mIn[28], line 237\u001b[0m\n\u001b[1;32m    235\u001b[0m embedding_model, full_model \u001b[38;5;241m=\u001b[39m build_vgg19_kde_loss(input_shape, num_classes, embedding_dim, dropout_rate, weight_decay)\n\u001b[1;32m    236\u001b[0m \u001b[38;5;66;03m# Train the model using data generators\u001b[39;00m\n\u001b[0;32m--> 237\u001b[0m history \u001b[38;5;241m=\u001b[39m \u001b[43mtrain_and_evaluate\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfull_model\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtrain_generator\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mval_generator\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43msteps_per_epoch\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mvalidation_steps\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mepochs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcenter_loss_weight\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlearning_rate\u001b[49m\u001b[43m)\u001b[49m\n","Cell \u001b[0;32mIn[28], line 162\u001b[0m, in \u001b[0;36mtrain_and_evaluate\u001b[0;34m(model, train_generator, val_generator, steps_per_epoch, validation_steps, epochs, center_loss_weight, learning_rate)\u001b[0m\n\u001b[1;32m    160\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m step \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mrange\u001b[39m(steps_per_epoch):\n\u001b[1;32m    161\u001b[0m     inputs_batch, labels_batch \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mnext\u001b[39m(train_generator)\n\u001b[0;32m--> 162\u001b[0m     loss, class_loss, center_loss, acc \u001b[38;5;241m=\u001b[39m \u001b[43mtrain_step\u001b[49m\u001b[43m(\u001b[49m\u001b[43minputs_batch\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlabels_batch\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    163\u001b[0m     epoch_loss \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m loss\n\u001b[1;32m    164\u001b[0m     epoch_class_loss \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m class_loss\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/tensorflow/python/util/traceback_utils.py:153\u001b[0m, in \u001b[0;36mfilter_traceback.<locals>.error_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    151\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mException\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m e:\n\u001b[1;32m    152\u001b[0m   filtered_tb \u001b[38;5;241m=\u001b[39m _process_traceback_frames(e\u001b[38;5;241m.\u001b[39m__traceback__)\n\u001b[0;32m--> 153\u001b[0m   \u001b[38;5;28;01mraise\u001b[39;00m e\u001b[38;5;241m.\u001b[39mwith_traceback(filtered_tb) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m    154\u001b[0m \u001b[38;5;28;01mfinally\u001b[39;00m:\n\u001b[1;32m    155\u001b[0m   \u001b[38;5;28;01mdel\u001b[39;00m filtered_tb\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/tensorflow/python/eager/execute.py:53\u001b[0m, in \u001b[0;36mquick_execute\u001b[0;34m(op_name, num_outputs, inputs, attrs, ctx, name)\u001b[0m\n\u001b[1;32m     51\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m     52\u001b[0m   ctx\u001b[38;5;241m.\u001b[39mensure_initialized()\n\u001b[0;32m---> 53\u001b[0m   tensors \u001b[38;5;241m=\u001b[39m pywrap_tfe\u001b[38;5;241m.\u001b[39mTFE_Py_Execute(ctx\u001b[38;5;241m.\u001b[39m_handle, device_name, op_name,\n\u001b[1;32m     54\u001b[0m                                       inputs, attrs, num_outputs)\n\u001b[1;32m     55\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m core\u001b[38;5;241m.\u001b[39m_NotOkStatusException \u001b[38;5;28;01mas\u001b[39;00m e:\n\u001b[1;32m     56\u001b[0m   \u001b[38;5;28;01mif\u001b[39;00m name \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n","\u001b[0;31mInvalidArgumentError\u001b[0m: Graph execution error:\n\nDetected at node full_model_1/kde_loss_layer_9_1/truediv_1 defined at (most recent call last):\n  File \"/opt/conda/lib/python3.10/runpy.py\", line 196, in _run_module_as_main\n\n  File \"/opt/conda/lib/python3.10/runpy.py\", line 86, in _run_code\n\n  File \"/opt/conda/lib/python3.10/site-packages/ipykernel_launcher.py\", line 18, in <module>\n\n  File \"/opt/conda/lib/python3.10/site-packages/traitlets/config/application.py\", line 1075, in launch_instance\n\n  File \"/opt/conda/lib/python3.10/site-packages/ipykernel/kernelapp.py\", line 739, in start\n\n  File \"/opt/conda/lib/python3.10/site-packages/tornado/platform/asyncio.py\", line 205, in start\n\n  File \"/opt/conda/lib/python3.10/asyncio/base_events.py\", line 603, in run_forever\n\n  File \"/opt/conda/lib/python3.10/asyncio/base_events.py\", line 1909, in _run_once\n\n  File \"/opt/conda/lib/python3.10/asyncio/events.py\", line 80, in _run\n\n  File \"/opt/conda/lib/python3.10/site-packages/ipykernel/kernelbase.py\", line 545, in dispatch_queue\n\n  File \"/opt/conda/lib/python3.10/site-packages/ipykernel/kernelbase.py\", line 534, in process_one\n\n  File \"/opt/conda/lib/python3.10/site-packages/ipykernel/kernelbase.py\", line 437, in dispatch_shell\n\n  File \"/opt/conda/lib/python3.10/site-packages/ipykernel/ipkernel.py\", line 362, in execute_request\n\n  File \"/opt/conda/lib/python3.10/site-packages/ipykernel/kernelbase.py\", line 778, in execute_request\n\n  File \"/opt/conda/lib/python3.10/site-packages/ipykernel/ipkernel.py\", line 449, in do_execute\n\n  File \"/opt/conda/lib/python3.10/site-packages/ipykernel/zmqshell.py\", line 549, in run_cell\n\n  File \"/opt/conda/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3051, in run_cell\n\n  File \"/opt/conda/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3106, in _run_cell\n\n  File \"/opt/conda/lib/python3.10/site-packages/IPython/core/async_helpers.py\", line 129, in _pseudo_sync_runner\n\n  File \"/opt/conda/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3311, in run_cell_async\n\n  File \"/opt/conda/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3493, in run_ast_nodes\n\n  File \"/opt/conda/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3553, in run_code\n\n  File \"/tmp/ipykernel_36/815618533.py\", line 237, in <module>\n\n  File \"/tmp/ipykernel_36/815618533.py\", line 162, in train_and_evaluate\n\n  File \"/tmp/ipykernel_36/815618533.py\", line 131, in train_step\n\n  File \"/opt/conda/lib/python3.10/site-packages/keras/src/utils/traceback_utils.py\", line 117, in error_handler\n\n  File \"/opt/conda/lib/python3.10/site-packages/keras/src/layers/layer.py\", line 846, in __call__\n\n  File \"/opt/conda/lib/python3.10/site-packages/keras/src/utils/traceback_utils.py\", line 117, in error_handler\n\n  File \"/opt/conda/lib/python3.10/site-packages/keras/src/ops/operation.py\", line 48, in __call__\n\n  File \"/opt/conda/lib/python3.10/site-packages/keras/src/utils/traceback_utils.py\", line 156, in error_handler\n\n  File \"/opt/conda/lib/python3.10/site-packages/keras/src/models/functional.py\", line 202, in call\n\n  File \"/opt/conda/lib/python3.10/site-packages/keras/src/ops/function.py\", line 155, in _run_through_graph\n\n  File \"/opt/conda/lib/python3.10/site-packages/keras/src/models/functional.py\", line 592, in call\n\n  File \"/opt/conda/lib/python3.10/site-packages/keras/src/utils/traceback_utils.py\", line 117, in error_handler\n\n  File \"/opt/conda/lib/python3.10/site-packages/keras/src/layers/layer.py\", line 846, in __call__\n\n  File \"/opt/conda/lib/python3.10/site-packages/keras/src/utils/traceback_utils.py\", line 117, in error_handler\n\n  File \"/opt/conda/lib/python3.10/site-packages/keras/src/ops/operation.py\", line 48, in __call__\n\n  File \"/opt/conda/lib/python3.10/site-packages/keras/src/utils/traceback_utils.py\", line 156, in error_handler\n\n  File \"/tmp/ipykernel_36/815618533.py\", line 53, in call\n\nrequired broadcastable shapes\n\t [[{{node full_model_1/kde_loss_layer_9_1/truediv_1}}]] [Op:__inference_train_step_185338]"],"ename":"InvalidArgumentError","evalue":"Graph execution error:\n\nDetected at node full_model_1/kde_loss_layer_9_1/truediv_1 defined at (most recent call last):\n  File \"/opt/conda/lib/python3.10/runpy.py\", line 196, in _run_module_as_main\n\n  File \"/opt/conda/lib/python3.10/runpy.py\", line 86, in _run_code\n\n  File \"/opt/conda/lib/python3.10/site-packages/ipykernel_launcher.py\", line 18, in <module>\n\n  File \"/opt/conda/lib/python3.10/site-packages/traitlets/config/application.py\", line 1075, in launch_instance\n\n  File \"/opt/conda/lib/python3.10/site-packages/ipykernel/kernelapp.py\", line 739, in start\n\n  File \"/opt/conda/lib/python3.10/site-packages/tornado/platform/asyncio.py\", line 205, in start\n\n  File \"/opt/conda/lib/python3.10/asyncio/base_events.py\", line 603, in run_forever\n\n  File \"/opt/conda/lib/python3.10/asyncio/base_events.py\", line 1909, in _run_once\n\n  File \"/opt/conda/lib/python3.10/asyncio/events.py\", line 80, in _run\n\n  File \"/opt/conda/lib/python3.10/site-packages/ipykernel/kernelbase.py\", line 545, in dispatch_queue\n\n  File \"/opt/conda/lib/python3.10/site-packages/ipykernel/kernelbase.py\", line 534, in process_one\n\n  File \"/opt/conda/lib/python3.10/site-packages/ipykernel/kernelbase.py\", line 437, in dispatch_shell\n\n  File \"/opt/conda/lib/python3.10/site-packages/ipykernel/ipkernel.py\", line 362, in execute_request\n\n  File \"/opt/conda/lib/python3.10/site-packages/ipykernel/kernelbase.py\", line 778, in execute_request\n\n  File \"/opt/conda/lib/python3.10/site-packages/ipykernel/ipkernel.py\", line 449, in do_execute\n\n  File \"/opt/conda/lib/python3.10/site-packages/ipykernel/zmqshell.py\", line 549, in run_cell\n\n  File \"/opt/conda/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3051, in run_cell\n\n  File \"/opt/conda/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3106, in _run_cell\n\n  File \"/opt/conda/lib/python3.10/site-packages/IPython/core/async_helpers.py\", line 129, in _pseudo_sync_runner\n\n  File \"/opt/conda/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3311, in run_cell_async\n\n  File \"/opt/conda/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3493, in run_ast_nodes\n\n  File \"/opt/conda/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3553, in run_code\n\n  File \"/tmp/ipykernel_36/815618533.py\", line 237, in <module>\n\n  File \"/tmp/ipykernel_36/815618533.py\", line 162, in train_and_evaluate\n\n  File \"/tmp/ipykernel_36/815618533.py\", line 131, in train_step\n\n  File \"/opt/conda/lib/python3.10/site-packages/keras/src/utils/traceback_utils.py\", line 117, in error_handler\n\n  File \"/opt/conda/lib/python3.10/site-packages/keras/src/layers/layer.py\", line 846, in __call__\n\n  File \"/opt/conda/lib/python3.10/site-packages/keras/src/utils/traceback_utils.py\", line 117, in error_handler\n\n  File \"/opt/conda/lib/python3.10/site-packages/keras/src/ops/operation.py\", line 48, in __call__\n\n  File \"/opt/conda/lib/python3.10/site-packages/keras/src/utils/traceback_utils.py\", line 156, in error_handler\n\n  File \"/opt/conda/lib/python3.10/site-packages/keras/src/models/functional.py\", line 202, in call\n\n  File \"/opt/conda/lib/python3.10/site-packages/keras/src/ops/function.py\", line 155, in _run_through_graph\n\n  File \"/opt/conda/lib/python3.10/site-packages/keras/src/models/functional.py\", line 592, in call\n\n  File \"/opt/conda/lib/python3.10/site-packages/keras/src/utils/traceback_utils.py\", line 117, in error_handler\n\n  File \"/opt/conda/lib/python3.10/site-packages/keras/src/layers/layer.py\", line 846, in __call__\n\n  File \"/opt/conda/lib/python3.10/site-packages/keras/src/utils/traceback_utils.py\", line 117, in error_handler\n\n  File \"/opt/conda/lib/python3.10/site-packages/keras/src/ops/operation.py\", line 48, in __call__\n\n  File \"/opt/conda/lib/python3.10/site-packages/keras/src/utils/traceback_utils.py\", line 156, in error_handler\n\n  File \"/tmp/ipykernel_36/815618533.py\", line 53, in call\n\nrequired broadcastable shapes\n\t [[{{node full_model_1/kde_loss_layer_9_1/truediv_1}}]] [Op:__inference_train_step_185338]","output_type":"error"}]}]}